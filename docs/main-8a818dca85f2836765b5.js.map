{"version":3,"sources":["webpack:///./src/inputPanel.tsx","webpack:///./src/block.ts","webpack:///./src/parse.ts","webpack:///./src/grammar.pegjs","webpack:///./src/textPrinter.ts","webpack:///./src/evaluate.ts","webpack:///./src/visuals.tsx","webpack:///./src/lambdaEditorSyntax.ts","webpack:///./src/css/style.css?e1b4","webpack:///./src/css/style.css","webpack:///./src/lambda.ts","webpack:///./src/utils.ts","webpack:///./src/index.tsx"],"names":[],"mappings":"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AoC,GAAG,IAAI,CAAC,IAAI,CAAC;IAC3D,CAAC;IAED,IAAI,IAAI,GAAU,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;IAGtC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;AACtC,CAAC;AA/CD,sBA+CC;;;;;;;;;ACvFD;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,mBAAmB,0BAA0B;AAC7C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;;AAEA,qBAAqB,8BAA8B;AACnD;AACA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,yBAAyB,EAAE;AACjF,sDAAsD,yBAAyB,EAAE;AACjF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,yBAAyB,EAAE;AACjF,sDAAsD,yBAAyB,EAAE;AACjF;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,eAAe,qBAAqB;AACpC;AACA;;AAEA;;AAEA;AACA,wBAAwB,yBAAyB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,qBAAqB;;AAErB,gCAAgC,wBAAwB;AACxD;;AAEA;AACA;AACA;AACA;AACA;AACA,gDAAgD,WAAW;AAC3D;AACA,OAAO;AACP,uBAAuB;AACvB,mDAAmD;AACnD;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,kBAAkB;AAClB,OAAO;AACP;AACA,kBAAkB;AAClB,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,4BAA4B,6BAA6B,EAAE;AAC3D,sCAAsC;AACtC,yGAAyG,KAAK;AAC9G;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,+BAA+B,qBAAqB;AACpD;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,YAAY;AACZ;;AAEA;AACA,YAAY;AACZ;;AAEA;AACA,YAAY;AACZ;;AAEA;AACA,YAAY;AACZ;;AAEA;AACA,YAAY;AACZ;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uCAAuC,QAAQ;;AAE/C;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,kCAAkC,kBAAkB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,oCAAoC,kBAAkB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,sCAAsC,kBAAkB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,wCAAwC,kBAAkB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,oCAAoC,kBAAkB;AACtD;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,sCAAsC,kBAAkB;AACxD;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,wCAAwC,mBAAmB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,sCAAsC,mBAAmB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,wCAAwC,mBAAmB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,sCAAsC,mBAAmB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,oCAAoC,mBAAmB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA,4CAA4C,mBAAmB;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,oCAAoC,mBAAmB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,wCAAwC,mBAAmB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,oCAAoC,mBAAmB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,wCAAwC,mBAAmB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,oCAAoC,mBAAmB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,sCAAsC,mBAAmB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,wCAAwC,mBAAmB;AAC3D;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,mBAAmB;AACrD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,kCAAkC,mBAAmB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,sCAAsC,mBAAmB;AACzD;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,mBAAmB;AACrD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,kCAAkC,mBAAmB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,sCAAsC,mBAAmB;AACzD;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,oCAAoC,mBAAmB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,wCAAwC,mBAAmB;AAC3D;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,kCAAkC,mBAAmB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,oCAAoC,mBAAmB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,wCAAwC,mBAAmB;AAC3D;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,sCAAsC,mBAAmB;AACzD;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,oCAAoC,mBAAmB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AA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","file":"main-8a818dca85f2836765b5.js","sourcesContent":["import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport { Block } from './block';\nimport { Lambda, Application, LambdaFactory } from './lambda';\nimport { to_string, PrintOptions } from './textPrinter';\nimport * as ev from './evaluate';\nimport * as utils from './utils';\nimport * as Visual from './visuals';\nimport * as PegJs from 'pegjs';\nimport MonacoEditor from 'react-monaco-editor';\nimport {syntax as lambdaSyntax} from './lambdaEditorSyntax'\n\n\ndeclare var require: any;\n\nfunction toStrategy(strategy: string) {\n    console.log(strategy);\n    switch (strategy) {\n        case \"normal\": return ev.strategy.normal;\n        case \"value\": return ev.strategy.callByValue;\n        case \"name\": return ev.strategy.callByName;\n    }\n    throw \"unknown strategy\";\n}\n\ninterface InputBlockProperties {\n    factory: LambdaFactory;\n    value?: string;\n    index: number;\n    parent: Block | undefined;\n    onFinish: (idx: number, block: Block) => void;\n}\n\n// [the resulting lambda, the reduced application]\ntype LambdaReduction = [Lambda, Application]\n\ninterface InputBlockState {\n    evals?: LambdaReduction[][];\n    error?: string;\n    attemptsToCompileZeroExpressions: number;\n    showAllAppl: boolean;\n    transformAliases: boolean;\n    evaluating?: boolean;\n    strategy?: ev.ReduceStrategy;\n}\n\nclass InputBlock extends React.Component<InputBlockProperties, InputBlockState> {\n\n    private block: Block;\n    private editor: monaco.editor.IStandaloneCodeEditor;\n    private id = utils.randomString(12);\n    private reducers: ev.Reducer[] = [];\n    private strategySelect: HTMLElement;\n\n    constructor(props: any) {\n        super(props);\n        this.block = new Block(this.props.factory, this.props.parent, () => { this.startReducing() })\n        this.block.setCode(this.props.value || \"\");\n        this.state = {\n            evals: [],\n            strategy: ev.strategy.normal,\n            attemptsToCompileZeroExpressions: 0,\n            showAllAppl: false,\n            transformAliases: true\n        }\n\n        window.addEventListener('resize', () => this.editor.layout());\n    }\n\n    private stopReducing() {\n        this.reducers.forEach(r => r.stop());\n        this.reducers = [];\n        this.setState({ evaluating: false });\n    }\n\n    private startReducing() {\n        let exprs = this.block.expressions();\n        console.log(\"attempts: \", this.state.attemptsToCompileZeroExpressions);\n        if (exprs.length) {\n            this.setState({attemptsToCompileZeroExpressions: 0});\n            this.stopReducing();\n            this.setState({ evaluating: true });\n            let strategy = this.state.strategy as ev.ReduceStrategy;\n            this.reducers = exprs.map(expr => new ev.Reducer(expr, strategy, this.props.factory));\n            this.doReducing(0, []);\n        } else {\n            this.endReducing([]);\n            this.setState({attemptsToCompileZeroExpressions: this.state.attemptsToCompileZeroExpressions + 1});\n        }\n    }\n\n    private endReducing(evals: LambdaReduction[][]) {\n        console.log(evals.length);\n        this.stopReducing();\n        this.setState({\n            evals: evals\n        });\n    }\n\n\n    private doReducing(i: number, evals: LambdaReduction[][]) {\n        if (i < this.reducers.length) {\n            this.reducers[i].run((steps, reduced) => {\n                let zip = steps.map((s, i) => [s, reduced[i]] as LambdaReduction);\n                evals.push(zip);\n                this.doReducing(i + 1, evals);\n            }, () => {\n                this.endReducing(evals);\n            });\n        } else {\n            this.endReducing(evals);\n        }\n    }\n\n    private commitCodeToBlock() {\n        const code = this.block.getCode();\n        console.log(code);\n        this.setState({ error: undefined, evaluating: true });\n        //this.editor.getSession().setAnnotations([]);\n        try {\n            this.block.setCodeAndCompile(code);\n            return true;\n        } catch (e) {\n            const err = e as PegJs.parser.SyntaxError;\n            const { message, location } = err;\n            const { line, column } = location.start;\n\n            this.setError(`${message} in line ${line}, column ${column}`);\n\n            /*this.editor.getSession().setAnnotations([{\n                row: err.location.start.line-1,\n                column: err.location.start.column,\n                text: err.message,\n                type: \"error\" // also warning and information\n            }]);*/\n            this.stopReducing();\n            return false;\n        }\n    }\n\n    private setError(msg: string) {\n        this.setState({ error: msg });\n    }\n\n    private onSubmit() {\n        this.setState({attemptsToCompileZeroExpressions: 0});\n\n        // compile, start reducing and add new block\n        if (this.commitCodeToBlock()) {\n            this.props.onFinish(this.props.index, this.block);\n        }\n    }\n\n    private onExecute() {\n        // compile and start reducing\n        this.commitCodeToBlock();\n    }\n\n    private editorDidMount(editor: monaco.editor.IStandaloneCodeEditor) {\n        editor.focus();\n        editor.addAction({\n            label: \"Execute Block\",\n            id: \"execute\",\n            keybindings: [\n                monaco.KeyMod.CtrlCmd | monaco.KeyCode.Enter\n            ],\n            run: () => this.onExecute()\n        });\n        editor.addAction({\n            label: \"Submit Block\",\n            id: \"submit\",\n            keybindings: [\n                monaco.KeyMod.Shift | monaco.KeyCode.Enter\n            ],\n            run: () => this.onSubmit()\n        });\n\n        this.editor = editor;\n    }\n\n    private editorWillMount() {\n        console.log(\"register lang\")\n        monaco.languages.register({\n            id: \"lambda\"\n        });\n        \n        monaco.languages.setMonarchTokensProvider(\"lambda\", lambdaSyntax);\n    }\n\n    render() {\n        const evals = this.state.evals || []\n        const showAllAppl = this.state.showAllAppl\n        const transformAliases = this.state.transformAliases\n\n        const options: monaco.editor.IEditorOptions = {\n            automaticLayout: true,\n            scrollbar: {\n                useShadows: false\n            },\n            fontFamily: \"monaco\"\n        };\n        return (\n            <div className=\"input-block\">\n                <div className=\"editor-container\">\n                    <MonacoEditor\n                        height={400}\n                        width=\"100%\"\n                        language=\"lambda\"\n                        value={this.block.getCode()}\n                        onChange={code => this.block.setCode(code)}\n                        editorDidMount={e => this.editorDidMount(e as monaco.editor.IStandaloneCodeEditor)}\n                        editorWillMount={e => this.editorWillMount()}\n                    />\n                </div>\n                <div className=\"config-box\">\n                    {/* Left site */}\n                    <div className=\"config-group left\">\n                        <Visual.Switch\n                            className=\"showAll-switch\"\n                            checked={showAllAppl}\n                            onChange={(b) => { this.setState({ showAllAppl: b }) }}\n                            label=\"Show all steps\" />\n                        <Visual.Switch\n                            className=\"transformAliases-switch\"\n                            checked={transformAliases}\n                            onChange={(b) => { this.setState({ transformAliases: b }) }}\n                            label=\"Transform Aliases\" />\n                    </div>\n\n                    {/* Right site */}\n                    <div className=\"config-group right\">\n                        <span className={\"expression-count-box\" + (this.state.attemptsToCompileZeroExpressions > 1 ? \" too-many-zero-expression-attempts\" : \"\")}>\n                            {evals.length == 0 ? \"No expressions\" : ''}\n                        </span>\n                        <select className=\"strategy-select\" ref={(s) => this.strategySelect = s!} onChange={(sel: any) => this.setState({ strategy: toStrategy(sel.target.value) })}>\n                            <option value=\"normal\">Normal</option>\n                            <option value=\"name\">Call-By-Name</option>\n                            <option value=\"value\">Call-By-Value</option>\n                        </select>\n                        <Visual.ToggleButton\n                            className=\"run-button\"\n                            checked={!!this.state.evaluating}\n                            label={this.state.evaluating ? \"Stop \\u25FE\" : \"Run \\u25B6\"}\n                            onChange={(b) => { if (b) { this.onExecute() } else this.stopReducing(); }} />\n                    </div>\n                    <div className=\"float-clear\" />\n                </div>\n                {this.state.error ?\n                    <div className=\"error-box\">\n                        Error: {this.state.error}\n                    </div>\n                    :\n                    <div className=\"output-box\">\n                        {evals.map((lmbs) => {\n                            function underline_appl(f: string, a: string): [string, string] {\n                                return [\n                                    `<u class=\"redex-func\">${f}</u>`,\n                                    `<u class=\"redex-arg\">${a}</u>`\n                                ]\n                            }\n                            function print_lmb([lmb, app]: LambdaReduction, idx: number): string[] {\n                                let ops: PrintOptions = {}\n                                if (app) {\n                                    ops.appl_pp = new Map([[app, underline_appl]])\n                                }\n                                let result = [(idx == 0 ? \"\" : \"=> \") + to_string(lmb, ops)]\n\n                                if (app && showAllAppl && transformAliases) {\n                                    let f = app.func();\n                                    if (f.alias()) {\n                                        ops.force_expand_aliases = new Set([f])\n                                        result.push(\"&nbsp;= \" + to_string(lmb, ops));\n                                    }\n                                }\n                                return result\n                            }\n\n                            return (\n                                <div className=\"expr-box\">\n                                    {lmbs\n                                        .filter((_, idx) => showAllAppl || idx == 0 || idx == lmbs.length - 1)\n                                        .map(print_lmb)\n                                        .map(ss => ss.map((s, i) => <div className={\"appl-box\" + (i? \" aliasTransform\" : \"\")} dangerouslySetInnerHTML={{__html: s}} />))\n                                    }\n                                    <div className=\"reduce-box\">{lmbs.length - 1} Steps</div>\n                                </div>\n                            );\n                        })}\n                    </div>\n                }\n            </div>\n        );\n    }\n}\n\n\n\nexport class InputPanel extends React.Component<{ factory: LambdaFactory }, { blocks: JSX.Element[] }> {\n\n    constructor(props: any) {\n        super(props);\n        this.state = { blocks: [] };\n        this.addInputBlock(undefined);\n    }\n\n    addInputBlock(block: Block | undefined) {\n        let idx = this.state.blocks.length;\n        let newB = (<InputBlock factory={this.props.factory} index={idx} parent={block} onFinish={(from, blk) => {\n            if (from + 1 >= this.state.blocks.length) {\n                this.addInputBlock(blk);\n            }\n        }} />);\n        this.state.blocks.push(newB);\n        this.setState({ blocks: this.state.blocks });\n    }\n\n    render() {\n        return (\n            <div className=\"panel panel-default config-panel\">\n                <div className=\"panel-heading\">\n                    <h3 className=\"panel-title\">\n                        <a data-toggle=\"collapse\" data-target=\"#main-panel\">Lambda Evaluator</a>\n                    </h3>\n                </div>\n                <div className=\"panel-body collapse in\" id=\"main-panel\">\n                    {this.state.blocks}\n                </div>\n            </div>\n        );\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/inputPanel.tsx","import {Lambda, LambdaFactory, Application, Abstraction, Definition, GlobalDef, Variable, LambdaVisitor} from './lambda';\nimport {parse} from './parse';\n\nexport class Block {\n\n    private defs: { [name: string] : GlobalDef; } = {};\n    private exprs: Lambda[] = [];\n    private code: string = \"\";\n    private child: Block;\n    private enabled = true;\n\n    constructor(private factory: LambdaFactory, private _parent?: Block, private onRecompile?: (context: Block) => void) {\n        if(_parent) {\n            _parent.child = this;\n        }\n    }\n\n    enable(enable: boolean) {\n        let wasEnabled = this.enabled;\n        this.enabled = enable;\n\n        this.compile();\n\n        if(wasEnabled != enable && this.child) {\n            this.child.compile();\n        }\n    }\n\n    isEnabled() {\n        return this.enabled;\n    }\n\n    setCode(code: string) {\n        this.code = code;\n    }\n    \n    getCode() {\n        return this.code;\n    }\n\n    setCodeAndCompile(code: string): void {\n        this.setCode(code);\n        this.compile();\n    }\n\n    lookup(name: string): GlobalDef | undefined {\n        let def = this.defs[name];\n        if(def) {\n            return def;\n        }else if(this._parent) {\n            return this._parent.lookup(name);\n        }\n        return undefined;\n    }\n\n    definitions(): GlobalDef[] {\n        let defs: GlobalDef[] = [];\n        for(let def in this.defs) {\n            defs.push(this.defs[def]);\n        }\n        return defs;\n    }\n\n    expressions(): Lambda[] {\n        return this.exprs;\n    }\n\n    compile() {\n        this.defs = {};\n        this.exprs = [];\n\n        if(!this.enabled) {\n            return;\n        }\n        \n        let entities = parse(this.code, this.factory);\n\n        for(let entity of entities) {\n            let visitor = new ResolveVisitor(this, this.factory);\n            let ast = visitor.do_visit(entity);\n            if(ast.isGlobalDef()) {\n                let def = ast as GlobalDef;\n                this.defs[def.name()] = def;\n            }else{\n                this.exprs.push(ast);\n            }\n        }\n\n        if(this.onRecompile) {\n            this.onRecompile(this);\n        }\n\n        if(this.child) {\n            this.child.compile();\n        }\n    }\n}\n\nclass ResolveVisitor extends LambdaVisitor<Lambda> {\n\n    private defs: { [name: string] : Definition; } = {};\n\n    constructor(private context: Block, private factory: LambdaFactory) {\n        super();\n    }\n\n    visit_appl(node: Application): Lambda {\n        node._func = this.do_visit(node.func());\n        node._arg = this.do_visit(node.arg());\n        return node;\n    }\n\n    visit_abst(node: Abstraction): Lambda {\n        let name = node.name();\n        let old = this.defs[name];\n        this.defs[name] = node;\n        node._body = this.do_visit(node.body());\n        this.defs[name] = old;\n        return node;\n    }\n\n    visit_var(node: Variable): Lambda {\n        let name = node.name();\n        let def = this.defs[name];\n        if(def) {\n            node._def = def;\n            def._usages.push(node);\n        }else{\n            let ref = this.context.lookup(name);\n            if(ref) {\n                return this.factory.clone(ref.def());\n            }\n        }\n        return node;\n    }\n\n    visit_gdef(node: GlobalDef): Lambda {\n        node._def = this.do_visit(node.def());\n        return node;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/block.ts","import * as L from './lambda';\nimport {LambdaFactory, Lambda} from './lambda';\n//import * as grammar from './grammar'\ndeclare var require: any;\n\ninterface Node {\n    type: string\n}\n\ninterface Block {\n    type: \"block\",\n    entities: Node[]\n}\n\ninterface Definition extends Node {\n    type: \"def\",\n    name: string,\n    params: string[],\n    def: Node\n}\n\ninterface Abstraction extends Node {\n    type: \"abstr\",\n    vars: string[],\n    expr: Node\n}\n\ninterface Application extends Node {\n    type: \"appl\",\n    func: Node,\n    args: Node[]\n}\n\ninterface Var extends Node {\n    type: \"var\",\n    id: string\n}\n\nconst grammar: PEG.Parser = require(\"./grammar.pegjs\");\n\nexport function parse(code: string, factory: LambdaFactory): Lambda[] {\n\n    function makeParameter(body: Lambda, params: string[]): Lambda {\n        for(let param of params.reverse()) {\n            body = factory.newAbstraction(param, body);\n        }\n        return body;\n    }\n\n    function convert(node: Node): Lambda {\n        switch(node.type)\n        {\n        case \"def\":\n            {\n                let n = node as Definition;\n                return factory.newGlobalDefiniton(n.name, makeParameter(convert(n.def), n.params));\n            }\n\n        case \"abstr\":\n            {\n                let n = node as Abstraction;\n                return makeParameter(convert(n.expr), n.vars);\n            }\n\n        case \"appl\":\n            {\n                let n = node as Application;\n                let func = convert(n.func);\n                for(let arg of n.args) {\n                    func = factory.newApplication(func, convert(arg));\n                }\n                return func;\n            }\n\n        case \"var\":\n            {\n                let n = node as Var;\n                return factory.newVariable(n.id);\n            }\n        }\n        throw \"internal error: unknown node type \" + node.type;\n    }\n\n    let root: Block = grammar.parse(code);\n\n\n    return root.entities.map(convert);\n}\n\n\n// WEBPACK FOOTER //\n// ./src/parse.ts","/*\n * Generated by PEG.js 0.10.0.\n *\n * http://pegjs.org/\n */\n\n\"use strict\";\n\nfunction peg$subclass(child, parent) {\n  function ctor() { this.constructor = child; }\n  ctor.prototype = parent.prototype;\n  child.prototype = new ctor();\n}\n\nfunction peg$SyntaxError(message, expected, found, location) {\n  this.message  = message;\n  this.expected = expected;\n  this.found    = found;\n  this.location = location;\n  this.name     = \"SyntaxError\";\n\n  if (typeof Error.captureStackTrace === \"function\") {\n    Error.captureStackTrace(this, peg$SyntaxError);\n  }\n}\n\npeg$subclass(peg$SyntaxError, Error);\n\npeg$SyntaxError.buildMessage = function(expected, found) {\n  var DESCRIBE_EXPECTATION_FNS = {\n        literal: function(expectation) {\n          return \"\\\"\" + literalEscape(expectation.text) + \"\\\"\";\n        },\n\n        \"class\": function(expectation) {\n          var escapedParts = \"\",\n              i;\n\n          for (i = 0; i < expectation.parts.length; i++) {\n            escapedParts += expectation.parts[i] instanceof Array\n              ? classEscape(expectation.parts[i][0]) + \"-\" + classEscape(expectation.parts[i][1])\n              : classEscape(expectation.parts[i]);\n          }\n\n          return \"[\" + (expectation.inverted ? \"^\" : \"\") + escapedParts + \"]\";\n        },\n\n        any: function(expectation) {\n          return \"any character\";\n        },\n\n        end: function(expectation) {\n          return \"end of input\";\n        },\n\n        other: function(expectation) {\n          return expectation.description;\n        }\n      };\n\n  function hex(ch) {\n    return ch.charCodeAt(0).toString(16).toUpperCase();\n  }\n\n  function literalEscape(s) {\n    return s\n      .replace(/\\\\/g, '\\\\\\\\')\n      .replace(/\"/g,  '\\\\\"')\n      .replace(/\\0/g, '\\\\0')\n      .replace(/\\t/g, '\\\\t')\n      .replace(/\\n/g, '\\\\n')\n      .replace(/\\r/g, '\\\\r')\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\n  }\n\n  function classEscape(s) {\n    return s\n      .replace(/\\\\/g, '\\\\\\\\')\n      .replace(/\\]/g, '\\\\]')\n      .replace(/\\^/g, '\\\\^')\n      .replace(/-/g,  '\\\\-')\n      .replace(/\\0/g, '\\\\0')\n      .replace(/\\t/g, '\\\\t')\n      .replace(/\\n/g, '\\\\n')\n      .replace(/\\r/g, '\\\\r')\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\n  }\n\n  function describeExpectation(expectation) {\n    return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);\n  }\n\n  function describeExpected(expected) {\n    var descriptions = new Array(expected.length),\n        i, j;\n\n    for (i = 0; i < expected.length; i++) {\n      descriptions[i] = describeExpectation(expected[i]);\n    }\n\n    descriptions.sort();\n\n    if (descriptions.length > 0) {\n      for (i = 1, j = 1; i < descriptions.length; i++) {\n        if (descriptions[i - 1] !== descriptions[i]) {\n          descriptions[j] = descriptions[i];\n          j++;\n        }\n      }\n      descriptions.length = j;\n    }\n\n    switch (descriptions.length) {\n      case 1:\n        return descriptions[0];\n\n      case 2:\n        return descriptions[0] + \" or \" + descriptions[1];\n\n      default:\n        return descriptions.slice(0, -1).join(\", \")\n          + \", or \"\n          + descriptions[descriptions.length - 1];\n    }\n  }\n\n  function describeFound(found) {\n    return found ? \"\\\"\" + literalEscape(found) + \"\\\"\" : \"end of input\";\n  }\n\n  return \"Expected \" + describeExpected(expected) + \" but \" + describeFound(found) + \" found.\";\n};\n\nfunction peg$parse(input, options) {\n  options = options !== void 0 ? options : {};\n\n  var peg$FAILED = {},\n\n      peg$startRuleFunctions = { Block: peg$parseBlock },\n      peg$startRuleFunction  = peg$parseBlock,\n\n      peg$c0 = /^[\\n\\r \\t]/,\n      peg$c1 = peg$classExpectation([\"\\n\", \"\\r\", \" \", \"\\t\"], false, false),\n      peg$c2 = function(entities) {\n          return {\n              type: \"block\",\n              entities: entities.filter((e) => { return e;})\n          };\n      },\n      peg$c3 = /^[\\n\\r;]/,\n      peg$c4 = peg$classExpectation([\"\\n\", \"\\r\", \";\"], false, false),\n      peg$c5 = function(entity) {\n          return entity;\n      },\n      peg$c6 = \"--\",\n      peg$c7 = peg$literalExpectation(\"--\", false),\n      peg$c8 = \"//\",\n      peg$c9 = peg$literalExpectation(\"//\", false),\n      peg$c10 = \"#\",\n      peg$c11 = peg$literalExpectation(\"#\", false),\n      peg$c12 = /^[^\\n\\r]/,\n      peg$c13 = peg$classExpectation([\"\\n\", \"\\r\"], true, false),\n      peg$c14 = function() {\n          return undefined;\n      },\n      peg$c15 = \"=\",\n      peg$c16 = peg$literalExpectation(\"=\", false),\n      peg$c17 = function(name, params, def) {\n          return {\n              type: \"def\",\n              name: name,\n              params: params,\n              def: def\n          };\n      },\n      peg$c18 = \"(\",\n      peg$c19 = peg$literalExpectation(\"(\", false),\n      peg$c20 = \")\",\n      peg$c21 = peg$literalExpectation(\")\", false),\n      peg$c22 = function(exp) {\n          return exp;\n      },\n      peg$c23 = \"\\\\\",\n      peg$c24 = peg$literalExpectation(\"\\\\\", false),\n      peg$c25 = \".\",\n      peg$c26 = peg$literalExpectation(\".\", false),\n      peg$c27 = function(varId, expr) {\n          return {\n              type: \"abstr\",\n              vars: [varId],\n              expr: expr\n          };\n      },\n      peg$c28 = \"->\",\n      peg$c29 = peg$literalExpectation(\"->\", false),\n      peg$c30 = function(vars, expr) {\n          return {\n              type: \"abstr\",\n              vars: vars,\n              expr: expr\n          };\n      },\n      peg$c31 = function(func, args) {\n          return {\n              type: \"appl\",\n              func: func,\n              args: args\n          };\n      },\n      peg$c32 = function(op, operant) {\n          return {\n              op: op,\n              operant: operant\n          };\n      },\n      peg$c33 = function(first, operants) {\n          return {\n              type: \"operation\",\n              first: first,\n              operants: operants\n          };\n      },\n      peg$c34 = function(id) {\n          return { type: \"var\", id: id};\n      },\n      peg$c35 = function(num) {\n          return {type: \"number\", number: num};\n      },\n      peg$c36 = peg$otherExpectation(\"variable\"),\n      peg$c37 = /^[_a-zA-Z]/,\n      peg$c38 = peg$classExpectation([\"_\", [\"a\", \"z\"], [\"A\", \"Z\"]], false, false),\n      peg$c39 = /^[_a-zA-Z0-9]/,\n      peg$c40 = peg$classExpectation([\"_\", [\"a\", \"z\"], [\"A\", \"Z\"], [\"0\", \"9\"]], false, false),\n      peg$c41 = function(id) {\n        return id;\n      },\n      peg$c42 = peg$otherExpectation(\"integer\"),\n      peg$c43 = /^[0-9]/,\n      peg$c44 = peg$classExpectation([[\"0\", \"9\"]], false, false),\n      peg$c45 = function() { return parseInt(text(), 10); },\n      peg$c46 = /^[\\-+%\\/<>=[\\]\\^!=&{}*?#$|~]/,\n      peg$c47 = peg$classExpectation([\"-\", \"+\", \"%\", \"/\", \"<\", \">\", \"=\", \"[\", \"]\", \"^\", \"!\", \"=\", \"&\", \"{\", \"}\", \"*\", \"?\", \"#\", \"$\", \"|\", \"~\"], false, false),\n      peg$c48 = \"`\",\n      peg$c49 = peg$literalExpectation(\"`\", false),\n      peg$c50 = peg$otherExpectation(\"whitespace\"),\n      peg$c51 = /^[ \\t]/,\n      peg$c52 = peg$classExpectation([\" \", \"\\t\"], false, false),\n      peg$c53 = /^[\\n\\r]/,\n      peg$c54 = peg$classExpectation([\"\\n\", \"\\r\"], false, false),\n\n      peg$currPos          = 0,\n      peg$savedPos         = 0,\n      peg$posDetailsCache  = [{ line: 1, column: 1 }],\n      peg$maxFailPos       = 0,\n      peg$maxFailExpected  = [],\n      peg$silentFails      = 0,\n\n      peg$result;\n\n  if (\"startRule\" in options) {\n    if (!(options.startRule in peg$startRuleFunctions)) {\n      throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n    }\n\n    peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n  }\n\n  function text() {\n    return input.substring(peg$savedPos, peg$currPos);\n  }\n\n  function location() {\n    return peg$computeLocation(peg$savedPos, peg$currPos);\n  }\n\n  function expected(description, location) {\n    location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\n\n    throw peg$buildStructuredError(\n      [peg$otherExpectation(description)],\n      input.substring(peg$savedPos, peg$currPos),\n      location\n    );\n  }\n\n  function error(message, location) {\n    location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\n\n    throw peg$buildSimpleError(message, location);\n  }\n\n  function peg$literalExpectation(text, ignoreCase) {\n    return { type: \"literal\", text: text, ignoreCase: ignoreCase };\n  }\n\n  function peg$classExpectation(parts, inverted, ignoreCase) {\n    return { type: \"class\", parts: parts, inverted: inverted, ignoreCase: ignoreCase };\n  }\n\n  function peg$anyExpectation() {\n    return { type: \"any\" };\n  }\n\n  function peg$endExpectation() {\n    return { type: \"end\" };\n  }\n\n  function peg$otherExpectation(description) {\n    return { type: \"other\", description: description };\n  }\n\n  function peg$computePosDetails(pos) {\n    var details = peg$posDetailsCache[pos], p;\n\n    if (details) {\n      return details;\n    } else {\n      p = pos - 1;\n      while (!peg$posDetailsCache[p]) {\n        p--;\n      }\n\n      details = peg$posDetailsCache[p];\n      details = {\n        line:   details.line,\n        column: details.column\n      };\n\n      while (p < pos) {\n        if (input.charCodeAt(p) === 10) {\n          details.line++;\n          details.column = 1;\n        } else {\n          details.column++;\n        }\n\n        p++;\n      }\n\n      peg$posDetailsCache[pos] = details;\n      return details;\n    }\n  }\n\n  function peg$computeLocation(startPos, endPos) {\n    var startPosDetails = peg$computePosDetails(startPos),\n        endPosDetails   = peg$computePosDetails(endPos);\n\n    return {\n      start: {\n        offset: startPos,\n        line:   startPosDetails.line,\n        column: startPosDetails.column\n      },\n      end: {\n        offset: endPos,\n        line:   endPosDetails.line,\n        column: endPosDetails.column\n      }\n    };\n  }\n\n  function peg$fail(expected) {\n    if (peg$currPos < peg$maxFailPos) { return; }\n\n    if (peg$currPos > peg$maxFailPos) {\n      peg$maxFailPos = peg$currPos;\n      peg$maxFailExpected = [];\n    }\n\n    peg$maxFailExpected.push(expected);\n  }\n\n  function peg$buildSimpleError(message, location) {\n    return new peg$SyntaxError(message, null, null, location);\n  }\n\n  function peg$buildStructuredError(expected, found, location) {\n    return new peg$SyntaxError(\n      peg$SyntaxError.buildMessage(expected, found),\n      expected,\n      found,\n      location\n    );\n  }\n\n  function peg$parseBlock() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = [];\n    if (peg$c0.test(input.charAt(peg$currPos))) {\n      s2 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c1); }\n    }\n    while (s2 !== peg$FAILED) {\n      s1.push(s2);\n      if (peg$c0.test(input.charAt(peg$currPos))) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c1); }\n      }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$parseEntity();\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$parseEntity();\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c2(s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseEntity() {\n    var s0, s1, s2, s3, s4;\n\n    s0 = peg$currPos;\n    s1 = peg$parseDef();\n    if (s1 === peg$FAILED) {\n      s1 = peg$parseExpr();\n      if (s1 === peg$FAILED) {\n        s1 = peg$parseComment();\n      }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse_();\n      if (s2 !== peg$FAILED) {\n        s3 = [];\n        if (peg$c3.test(input.charAt(peg$currPos))) {\n          s4 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c4); }\n        }\n        while (s4 !== peg$FAILED) {\n          s3.push(s4);\n          if (peg$c3.test(input.charAt(peg$currPos))) {\n            s4 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c4); }\n          }\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c5(s1);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseComment() {\n    var s0, s1, s2, s3, s4;\n\n    s0 = peg$currPos;\n    s1 = peg$parse_();\n    if (s1 !== peg$FAILED) {\n      if (input.substr(peg$currPos, 2) === peg$c6) {\n        s2 = peg$c6;\n        peg$currPos += 2;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c7); }\n      }\n      if (s2 === peg$FAILED) {\n        if (input.substr(peg$currPos, 2) === peg$c8) {\n          s2 = peg$c8;\n          peg$currPos += 2;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c9); }\n        }\n        if (s2 === peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 35) {\n            s2 = peg$c10;\n            peg$currPos++;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c11); }\n          }\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = [];\n        if (peg$c12.test(input.charAt(peg$currPos))) {\n          s4 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c13); }\n        }\n        while (s4 !== peg$FAILED) {\n          s3.push(s4);\n          if (peg$c12.test(input.charAt(peg$currPos))) {\n            s4 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c13); }\n          }\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c14();\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseDef() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    s1 = peg$parseIdentifier();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$parseIdentifier();\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$parseIdentifier();\n      }\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 61) {\n          s3 = peg$c15;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c16); }\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parse_();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseExpr();\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c17(s1, s2, s5);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseAtom() {\n    var s0;\n\n    s0 = peg$parseVar();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseExprP();\n    }\n\n    return s0;\n  }\n\n  function peg$parseExpr() {\n    var s0;\n\n    s0 = peg$parseAbstraction();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseApplication();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseAtom();\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseExprP() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    s0 = peg$currPos;\n    s1 = peg$parse_();\n    if (s1 !== peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 40) {\n        s2 = peg$c18;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c19); }\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parse_();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parseExpr();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parse_();\n            if (s5 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 41) {\n                s6 = peg$c20;\n                peg$currPos++;\n              } else {\n                s6 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c21); }\n              }\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parse_();\n                if (s7 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c22(s4);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseAbstraction() {\n    var s0;\n\n    s0 = peg$parseAbstraction1();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseAbstraction2();\n    }\n\n    return s0;\n  }\n\n  function peg$parseAbstraction1() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    s1 = peg$parse_();\n    if (s1 !== peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 92) {\n        s2 = peg$c23;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c24); }\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseIdentifier();\n        if (s3 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 46) {\n            s4 = peg$c25;\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c26); }\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseExpr();\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c27(s3, s5);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseAbstraction2() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    s1 = peg$parse_();\n    if (s1 !== peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 92) {\n        s2 = peg$c23;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c24); }\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = [];\n        s4 = peg$parseIdentifier();\n        if (s4 !== peg$FAILED) {\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            s4 = peg$parseIdentifier();\n          }\n        } else {\n          s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n          if (input.substr(peg$currPos, 2) === peg$c28) {\n            s4 = peg$c28;\n            peg$currPos += 2;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c29); }\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseExpr();\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c30(s3, s5);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseApplication() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parseFunc();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$parseAtom();\n      if (s3 !== peg$FAILED) {\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parseAtom();\n        }\n      } else {\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c31(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseFunc() {\n    var s0;\n\n    s0 = peg$parseAbstraction();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseAtom();\n    }\n\n    return s0;\n  }\n\n  function peg$parseOperant() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = peg$parseOperator();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseAtom();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c32(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseOperation() {\n    var s0, s1, s2, s3, s4;\n\n    s0 = peg$currPos;\n    s1 = peg$parseAtom();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse_();\n      if (s2 !== peg$FAILED) {\n        s3 = [];\n        s4 = peg$parseOperant();\n        if (s4 !== peg$FAILED) {\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            s4 = peg$parseOperant();\n          }\n        } else {\n          s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c33(s1, s3);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseVar() {\n    var s0, s1;\n\n    s0 = peg$currPos;\n    s1 = peg$parseIdentifier();\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c34(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseNumber() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parse_();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseInteger();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parse_();\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c35(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseIdentifier() {\n    var s0, s1, s2, s3, s4, s5, s6;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$parse_();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      s3 = peg$currPos;\n      if (peg$c37.test(input.charAt(peg$currPos))) {\n        s4 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s4 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c38); }\n      }\n      if (s4 !== peg$FAILED) {\n        s5 = [];\n        if (peg$c39.test(input.charAt(peg$currPos))) {\n          s6 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s6 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c40); }\n        }\n        while (s6 !== peg$FAILED) {\n          s5.push(s6);\n          if (peg$c39.test(input.charAt(peg$currPos))) {\n            s6 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s6 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c40); }\n          }\n        }\n        if (s5 !== peg$FAILED) {\n          s4 = [s4, s5];\n          s3 = s4;\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      if (s3 !== peg$FAILED) {\n        s2 = input.substring(s2, peg$currPos);\n      } else {\n        s2 = s3;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parse_();\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c41(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c36); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseInteger() {\n    var s0, s1, s2;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = [];\n    if (peg$c43.test(input.charAt(peg$currPos))) {\n      s2 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c44); }\n    }\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        if (peg$c43.test(input.charAt(peg$currPos))) {\n          s2 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c44); }\n        }\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c45();\n    }\n    s0 = s1;\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c42); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseOperator() {\n    var s0, s1, s2, s3, s4;\n\n    s0 = peg$currPos;\n    s1 = [];\n    if (peg$c46.test(input.charAt(peg$currPos))) {\n      s2 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c47); }\n    }\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        if (peg$c46.test(input.charAt(peg$currPos))) {\n          s2 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c47); }\n        }\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 === peg$FAILED) {\n      s1 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 96) {\n        s2 = peg$c48;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c49); }\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseIdentifier();\n        if (s3 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 96) {\n            s4 = peg$c48;\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c49); }\n          }\n          if (s4 !== peg$FAILED) {\n            s2 = [s2, s3, s4];\n            s1 = s2;\n          } else {\n            peg$currPos = s1;\n            s1 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s1;\n          s1 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n    }\n    if (s1 !== peg$FAILED) {\n      s0 = input.substring(s0, peg$currPos);\n    } else {\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n  function peg$parse_() {\n    var s0, s1, s2, s3;\n\n    peg$silentFails++;\n    s0 = [];\n    if (peg$c51.test(input.charAt(peg$currPos))) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c52); }\n    }\n    if (s1 === peg$FAILED) {\n      s1 = peg$currPos;\n      s2 = [];\n      if (peg$c53.test(input.charAt(peg$currPos))) {\n        s3 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c54); }\n      }\n      if (s3 !== peg$FAILED) {\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          if (peg$c53.test(input.charAt(peg$currPos))) {\n            s3 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c54); }\n          }\n        }\n      } else {\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        if (peg$c51.test(input.charAt(peg$currPos))) {\n          s3 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c52); }\n        }\n        if (s3 !== peg$FAILED) {\n          s2 = [s2, s3];\n          s1 = s2;\n        } else {\n          peg$currPos = s1;\n          s1 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n    }\n    while (s1 !== peg$FAILED) {\n      s0.push(s1);\n      if (peg$c51.test(input.charAt(peg$currPos))) {\n        s1 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c52); }\n      }\n      if (s1 === peg$FAILED) {\n        s1 = peg$currPos;\n        s2 = [];\n        if (peg$c53.test(input.charAt(peg$currPos))) {\n          s3 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c54); }\n        }\n        if (s3 !== peg$FAILED) {\n          while (s3 !== peg$FAILED) {\n            s2.push(s3);\n            if (peg$c53.test(input.charAt(peg$currPos))) {\n              s3 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s3 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c54); }\n            }\n          }\n        } else {\n          s2 = peg$FAILED;\n        }\n        if (s2 !== peg$FAILED) {\n          if (peg$c51.test(input.charAt(peg$currPos))) {\n            s3 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c52); }\n          }\n          if (s3 !== peg$FAILED) {\n            s2 = [s2, s3];\n            s1 = s2;\n          } else {\n            peg$currPos = s1;\n            s1 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s1;\n          s1 = peg$FAILED;\n        }\n      }\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c50); }\n    }\n\n    return s0;\n  }\n\n  peg$result = peg$startRuleFunction();\n\n  if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n    return peg$result;\n  } else {\n    if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n      peg$fail(peg$endExpectation());\n    }\n\n    throw peg$buildStructuredError(\n      peg$maxFailExpected,\n      peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null,\n      peg$maxFailPos < input.length\n        ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)\n        : peg$computeLocation(peg$maxFailPos, peg$maxFailPos)\n    );\n  }\n}\n\nmodule.exports = {\n  SyntaxError: peg$SyntaxError,\n  parse:       peg$parse\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/grammar.pegjs\n// module id = 193\n// module chunks = 1","import {Lambda, LambdaVisitor, Application, Abstraction, Definition, Variable, GlobalDef} from \"./lambda\";\n\nexport interface PrintOptions {\n    print_id?: boolean,\n    print_def?: boolean,\n    print_paren?: boolean,\n    expand_alias?: boolean,\n    force_expand_aliases?: Set<Lambda>,\n    appl_pp?: Map<Application, (func: string, param: string) => [string, string]>\n}\n\ninterface AppedixInfo {\n    paren?: boolean\n    def?: Definition\n}\n\nexport function to_string(l: Lambda, opts:PrintOptions = {}): string {\n    if(opts.print_id) {\n        opts.print_paren = true;\n    }\n    opts.appl_pp = opts.appl_pp || new Map()\n    opts.force_expand_aliases = opts.force_expand_aliases || new Set()\n\n    var boundNames: string[] = []\n    return tos(l, false, false);\n\n    function tos(lmb: Lambda, inAppl: boolean, firstInAppl: boolean): string {\n\n        class ToStringVisitor extends LambdaVisitor<string> {\n            visit_appl(node: Application): string {\n                let f = tos(node.func(), true, true);\n                let a = tos(node.arg(), true, false);\n                let pp = opts.appl_pp!.get(node) || ((a, b) => [a, b]);\n                [f, a] = pp(f, a);\n                return this.p(`${f} ${a}`, {paren: inAppl && !firstInAppl });\n            }\n\n            visit_abst(node: Abstraction): string {\n                let name = node.name();\n\n                boundNames.push(name);\n                let body = tos(node.body(), false, false);\n                boundNames.pop();\n\n                return this.p(`\\\\${name}.${body}`, {paren: inAppl });\n            }\n\n            visit_var(node: Variable): string {\n                let str = this.p( node.name(), {def: node.def()});\n                if(!node.isBound()) {\n                    str = prependIfBound(\"$\", str);\n                }\n                return str;\n            }\n\n            visit_gdef(node: GlobalDef): string {\n                let name = node.name();\n                let def = tos(node.def(), false, false);\n                return this.p(`${name} = ${def}`);\n            }\n\n            private appedix(info: AppedixInfo): string {\n                let result: string[] = [];\n                if(opts.print_id) {\n                    result.push(`id=${lmb.id()}`);\n                }\n                if(opts.print_def && info.def) {\n                    result.push(`def=${info.def.id()}`);\n                }\n                return result.length? `[${result.join(\",\")}]` : \"\";\n            }\n\n\n            private p(str: string, info: AppedixInfo = {}) {\n                return (opts.print_paren || info.paren? `(${str})` : str) + this.appedix(info);\n            }\n        }\n        function prependIfBound(c: string, name: string) {\n            if (boundNames.indexOf(name) >= 0) {\n                name = c + name;\n            }\n            return name;\n        }\n        let alias = lmb.alias();\n        if(alias && !opts.expand_alias && !opts.force_expand_aliases!.has(lmb)) {\n            return prependIfBound(\"@\", alias.name());\n        }\n        let v = new ToStringVisitor();\n        return v.do_visit(lmb);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/textPrinter.ts","import {Lambda, Application, Definition, Variable, Abstraction, GlobalDef, LambdaVisitor, LambdaFactory} from './lambda';\n\n\nexport type ReduceStrategy = (lmb: Lambda) => Application | undefined;\n\nexport namespace strategy {\n    export function normal(lmb: Lambda): Application | undefined {\n        return new NormalReduceVisitor().do_visit(lmb);\n    }\n\n    export function callByValue(lmb: Lambda): Application | undefined {\n        return new CallByValueReduceVisitor().do_visit(lmb);\n    }\n\n    export function callByName(lmb: Lambda): Application | undefined {\n        return new CallByNameReduceVisitor().do_visit(lmb);\n    }\n}\n\nexport function reduce(lmb: Lambda, strategy: ReduceStrategy, factory: LambdaFactory): Lambda | undefined {\n    let redex = strategy(lmb);\n    return redex? factory.reduce(lmb, redex) : undefined;\n}\n\nexport function reduceAll(lmb: Lambda, strategy: ReduceStrategy, factory: LambdaFactory): Lambda[] {\n    let steps: Lambda[] = [lmb];\n    let step: Lambda | undefined;\n    while(step = reduce(lmb, strategy, factory)) {\n        steps.push(step);\n        lmb = step;\n    }\n\n    return steps;\n}\n\ntype ReducerCallback = (steps: Lambda[], reduced: Application[]) => void;\n\nexport class Reducer {\n    \n    private curLambda: Lambda | undefined;\n    private result: Lambda[];\n    private reduced: Application[] = [];\n    private running = false;\n\n    constructor(private initLambda: Lambda, private strategy: ReduceStrategy, private factory: LambdaFactory) {\n        this.curLambda = initLambda;\n        this.result = [initLambda];\n    }\n\n    public run(result: ReducerCallback, abort?: () => void) {\n        this.running = true;\n        this.next(result, abort || (() => {}));\n    }\n\n    public stop() {\n        this.running = false;\n    }\n\n    private next(result: ReducerCallback, abort: () => void) {\n        if(!this.running) {\n            abort();\n        }else if(this.curLambda) {\n            requestAnimationFrame(() => {\n                this.step();\n                this.next(result, abort);\n            });\n        }else{\n            console.log(\"end\");\n            this.stop();\n            result(this.result, this.reduced);\n        }\n    }\n\n    public step() {\n        for(let i = 0; i < 10; ++i) {\n            if(!this.curLambda) {\n                return;\n            }\n\n            let redex = this.strategy(this.curLambda);\n            if(!redex) {\n                this.curLambda = undefined;\n                return;\n            }\n\n            this.curLambda = this.factory.reduce(this.curLambda, redex);\n\n            if(this.curLambda) {\n                this.result.push(this.curLambda);\n                this.reduced.push(redex);\n            }\n        }\n    }\n}\n\nclass NormalReduceVisitor extends LambdaVisitor<Application | undefined> {\n\n    visit_appl(node: Application): Application | undefined {\n        if(node.isRedex()) {\n            return node;\n        }\n        let redex = this.do_visit(node.func());\n        return redex || this.do_visit(node.arg());\n    }\n\n    visit_abst(node: Abstraction): Application | undefined {\n        return this.do_visit(node.body());\n    }\n\n    visit_var(node: Variable): Application | undefined {\n        return undefined;\n    }\n\n    visit_gdef(node: GlobalDef): Application | undefined {\n        return this.do_visit(node.def());\n    }\n}\n\nclass CallByNameReduceVisitor extends LambdaVisitor<Application | undefined> {\n\n    visit_appl(node: Application): Application | undefined {\n        if(node.isRedex()) {\n            return node;\n        }\n        let redex = this.do_visit(node.func());\n        return redex || this.do_visit(node.arg());\n    }\n\n    visit_abst(node: Abstraction): Application | undefined {\n        return undefined;\n    }\n\n    visit_var(node: Variable): Application | undefined {\n        return undefined;\n    }\n\n    visit_gdef(node: GlobalDef): Application | undefined {\n        return this.do_visit(node.def());\n    }\n}\n\nfunction isValue(node: Lambda) {\n    return node.isAbstraction();\n}\n\nclass CallByValueReduceVisitor extends LambdaVisitor<Application | undefined> {\n\n    visit_appl(node: Application): Application | undefined {\n        if(node.isRedex() && isValue(node.arg())) {\n            return node;\n        }\n        let redex = this.do_visit(node.func());\n        return redex || this.do_visit(node.arg());\n    }\n\n    visit_abst(node: Abstraction): Application | undefined {\n        return undefined;\n    }\n\n    visit_var(node: Variable): Application | undefined {\n        return undefined;\n    }\n\n    visit_gdef(node: GlobalDef): Application | undefined {\n        return this.do_visit(node.def());\n    }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/evaluate.ts","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport * as Utils from \"./utils\";\n\n\n/** small wrapper for bootstrap form groups */\nexport class FormGroup extends React.Component<{\n\t\tlabel: string, children?: any, id?:string, isStatic?:boolean\n\t}, {}> {\n\n\trender() {\n\t\treturn (\n            <div className=\"form-group\">\n                <label htmlFor={this.props.id} className=\"col-sm-6 control-label\">{this.props.label}</label>\n                <div className={\"col-sm-6 \"+(this.props.isStatic?\"form-control-static\":\"\")}>{this.props.children}</div>\n            </div>\n        );\n\t}\n}\n\n\n/** small wrapper for bootstrap form checkboxes */\nexport class CheckboxForm extends React.Component<{checked: boolean, label: string, id?: string, onChange: (checked: boolean) => void}, {}> {\n\n\tprivate input: HTMLInputElement;\n\tprivate id = this.props.id || Utils.randomString();\n\n\tprivate onChange(): void {\n\t\tthis.props.onChange(this.input.checked);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<FormGroup label={this.props.label} id={this.props.id} isStatic>\n\t\t\t\t<input type=\"checkbox\" checked={this.props.checked} id={this.id} ref={e => this.input = e!} onChange={this.onChange.bind(this)} />\n\t\t\t</FormGroup>\n\t\t);\n\t}\n}\n\n/** small wrapper for bootstrap form number field */\nexport class NumberForm extends React.Component<{value: number, step?: number, min?: number, max?: number, label: string, id?: string, onChange: (value: number) => void}, {}> {\n\n\tprivate input: HTMLInputElement;\n\tprivate id = this.props.id || Utils.randomString();\n\n\tprivate onChange(): void {\n\t\tthis.props.onChange(+this.input.value);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<FormGroup label={this.props.label} id={this.props.id} isStatic>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"number\"\n\t\t\t\t\tvalue={this.props.value}\n\t\t\t\t\tid={this.id}\n\t\t\t\t\tstep={this.props.step}\n\t\t\t\t\tmin={this.props.min}\n\t\t\t\t\tmax={this.props.max}\n\t\t\t\t\tref={e => this.input = e!}\n\t\t\t\t\tonChange={this.onChange.bind(this)} />\n\t\t\t</FormGroup>\n\t\t);\n\t}\n}\n\n\nexport class Switch extends React.Component<{className?: string, checked: boolean, label: string, id?: string, onChange: (checked: boolean) => void}, {}> {\n\n\tprivate input: HTMLInputElement;\n\tprivate id = this.props.id || Utils.randomString();\n\n\tprivate onChange(): void {\n\t\tthis.props.onChange(this.input.checked);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<span className={\"switch-grouper \" + (this.props.className || \"\")}>\n                <label htmlFor={this.id}>{this.props.label}</label>\n\t\t\t\t<label className=\"switch\">\n\t\t\t\t\t<input type=\"checkbox\" checked={this.props.checked} id={this.id} ref={e => this.input = e!} onChange={this.onChange.bind(this)} />\n\t\t\t\t\t<div className=\"slider\"></div>\n\t\t\t\t</label>\n\t\t\t</span>\n\t\t);\n\t}\n}\n\n\nexport class ToggleButton extends React.Component<{className?: string, checked: boolean, label: string, id?: string, onChange: (checked: boolean) => void}, {}> {\n\n\tprivate input: HTMLInputElement;\n\tprivate id = this.props.id || Utils.randomString();\n\n\tprivate onChange(): void {\n\t\tthis.props.onChange(this.input.checked);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<label className={\"toggle \" + (this.props.className || \"\")}>\n\t\t\t\t<input type=\"checkbox\" checked={this.props.checked} id={this.id} ref={e => this.input = e!} onChange={this.onChange.bind(this)} />\n\t\t\t\t<div className=\"toggle-view\">{this.props.label}</div>\n\t\t\t</label>\n\t\t);\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/visuals.tsx","export var syntax: any = {\n    keywords: [],\n\n    typeKeywords: [],\n\n    operators: [\n        '=', '->', '.', '\\\\'\n    ],\n\n    // The main tokenizer for our languages\n    tokenizer: {\n        root: [\n\n            [/\\\\/, \"keyword\", \"@insig\"],\n            [/^[^a-zA-Z_0-9]*[a-zA-Z_0-9]+(?=.*=)/, \"keyword\", \"@insig\"],\n\n            // whitespace\n            { include: '@whitespace' },\n        ],\n\n        whitespace: [\n            [/[ \\t\\r\\n]+/, 'white'],\n            [/\\/\\/.*$/, 'comment'],\n            [/#.*$/, 'comment'],\n            [/--.*$/, 'comment'],\n        ],\n\n        insig: [\n            [/[a-zA-Z_0-9]+/, \"string\"],\n            [/->|[\\.=]/, \"keyword\", \"@pop\"]\n        ]\n    },\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/lambdaEditorSyntax.ts","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/css-loader/index.js!./style.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {}\noptions.transform = transform\n// add the styles to the DOM\nvar update = require(\"!../../node_modules/style-loader/lib/addStyles.js\")(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../node_modules/css-loader/index.js!./style.css\", function() {\n\t\t\tvar newContent = require(\"!!../../node_modules/css-loader/index.js!./style.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/css/style.css\n// module id = 209\n// module chunks = 1","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(undefined);\n// imports\n\n\n// module\nexports.push([module.id, \"body {\\n    background-color: whitesmoke;\\n    padding-bottom: 200px;\\n}\\n\\n.input-block {\\n    font: 15px/normal 'Monaco', 'Menlo', 'Ubuntu Mono', 'Consolas', 'source-code-pro', monospace;\\n    margin-bottom: 30px;\\n}\\n\\n.input-block:last-child {\\n    margin-bottom: 0px;\\n}\\n\\n.editor-container {\\n    border: solid 1px lightgray;\\n}\\n\\n.error-box {\\n    color: darkred;\\n    border: solid 1px lightgray;\\n    padding: 3px;\\n}\\n\\n.expression-count-box {\\n    margin-right: 5px\\n}\\n\\n.too-many-zero-expression-attempts {\\n    color: darkred;\\n    font-weight: bold;\\n}\\n\\n.config-box {\\n    color: dimgrey;\\n    border: solid 1px lightgray;\\n    padding: 5px;\\n    vertical-align: center;\\n    background-color: #f0f0f0;\\n}\\n\\n.config-box label {\\n    margin: 0 4px;\\n}\\n\\n.config-box > * {\\n    height: 30px;\\n}\\n\\n.expr-box {\\n    color: black;\\n    border: solid 1px lightgray;\\n    padding: 3px;\\n    padding-left: 10px;\\n    overflow: auto;\\n    word-wrap: normal;\\n    white-space:nowrap;\\n}\\n\\n.appl-box {\\n    padding: 1px;\\n}\\n\\n.appl-box.aliasTransform {\\n    color: #666666\\n}\\n\\nu.redex-func {\\n    border-bottom: 1px solid;\\n    text-decoration: none;\\n}\\n\\nu.redex-arg {\\n    border-bottom: 1px dashed;\\n    text-decoration: none;\\n}\\n\\n.reduce-box {\\n    text-align: right;\\n    background: #d0ffd0;\\n    float: right;\\n}\\n\\n.config-group {\\n    display: flex;\\n    align-items: center\\n}\\n\\n.left { float: left; }\\n.right { float: right; }\\n\\n.run-button > .toggle-view {\\n    color: white;\\n    background: green;\\n    width: 50pt;\\n    margin-left: 5px;\\n    text-align: center;\\n}\\n\\n.run-button > input:checked + .toggle-view {\\n    background: darkred;\\n}\\n\\n.float-clear {\\n    clear: both;\\n    height: 0\\n}\\n\\n\\n\\n\\n.switch {\\n    vertical-align: middle;\\n}\\n\\n.switch {\\n  position: relative;\\n  display: inline-block;\\n  width: 30px;\\n  height: 17px;\\n  margin: 0 4px;\\n  vertical-align: middle;\\n}\\n\\n/* Hide default HTML checkbox */\\n.switch input {display:none;}\\n\\n/* The slider */\\n.slider {\\n  position: absolute;\\n  cursor: pointer;\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  bottom: 0;\\n  background-color: #ccc;\\n  -webkit-transition: .1s;\\n  transition: .1s;\\n}\\n\\n.slider:before {\\n  position: absolute;\\n  content: \\\"\\\";\\n  height: 13px;\\n  width: 13px;\\n  left: 2px;\\n  bottom: 2px;\\n  background-color: white;\\n  -webkit-transition: .1s;\\n  transition: .1s;\\n}\\n\\n\\n\\ninput:checked + .slider {\\n  background-color: #2196F3;\\n}\\n\\ninput:focus + .slider {\\n  box-shadow: 0 0 1px #2196F3;\\n}\\n\\ninput:checked + .slider:before {\\n  -webkit-transform: translateX(13px);\\n  -ms-transform: translateX(13px);\\n  transform: translateX(13px);\\n}\\n\\n\\n\\n\\n\\n.toggle {\\n    vertical-align: middle;\\n}\\n\\n.toggle {\\n  position: relative;\\n  display: inline-block;\\n  vertical-align: middle;\\n}\\n\\n/* Hide default HTML checkbox */\\n.toggle input {display:none;}\\n\\n/* The slider */\\n.toggle-view {\\n  cursor: pointer;\\n  background-color: #ccc;\\n  -webkit-transition: .4s;\\n  transition: .4s;\\n  padding: 2px 5px;\\n}\\n\\n.toggle-view:before {\\n  background-color: white;\\n  -webkit-transition: .4s;\\n  transition: .4s;\\n}\\n\\ninput:checked + .toggle-view {\\n  background-color: #2196F3;\\n}\\n\\ninput:focus + .toggle-view {\\n  box-shadow: 0 0 1px #2196F3;\\n}\\n\\n.monaco-editor .margin {\\n    background-color: #f0f0f0 !important\\n}\\n\\n\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader!./src/css/style.css\n// module id = 210\n// module chunks = 1","\nexport abstract class LambdaVisitor <T> {\n    do_visit(node: Lambda): T {\n        return node._accept(this);\n    }\n\n    abstract visit_appl(node: Application): T;\n    abstract visit_abst(node: Abstraction): T;\n    abstract visit_var(node: Variable): T;\n    abstract visit_gdef(node: GlobalDef): T;\n}\n\nexport abstract class Lambda {\n    public _alias?: GlobalDef;\n\n    constructor(private _id: number) {\n    }\n\n    id(): number {\n        return this._id;\n    }\n\n    alias(): GlobalDef | undefined {\n        return this._alias;\n    }\n\n    isApplication(): boolean {\n        return false;\n    }\n\n    isAbstraction(): boolean {\n        return false;\n    }\n\n    isVariable(): boolean {\n        return false;\n    }\n\n    isGlobalDef(): boolean {\n        return false;\n    }\n\n    abstract _accept<T>(visitor: LambdaVisitor<T>): T;\n}\n\nexport class Application extends Lambda {\n    constructor(id: number, public _func: Lambda, public _arg: Lambda) {\n        super(id);\n    }\n\n    func(): Lambda {\n        return this._func;\n    }\n\n    arg(): Lambda {\n        return this._arg;\n    }\n\n    isApplication(): boolean {\n        return true;\n    }\n\n    isRedex(): boolean {\n        return this.func().isAbstraction();\n    }\n\n    _accept<T>(visitor: LambdaVisitor<T>): T {\n        return visitor.visit_appl(this);\n    }\n}\n\nexport abstract class Definition extends Lambda {\n    public _usages: Variable[] = [];\n\n    usages(): Variable[] {\n        return this._usages;\n    }\n\n}\n\nexport class Abstraction extends Definition {\n\n    constructor(id: number, public _name: string, public _body: Lambda) {\n        super(id);\n    }\n\n    name(): string {\n        return this._name;\n    }\n\n    body(): Lambda {\n        return this._body\n    }\n\n    isAbstraction(): boolean {\n        return true;\n    }\n\n    _accept<T>(visitor: LambdaVisitor<T>): T {\n        return visitor.visit_abst(this);\n    }\n}\n\nexport class Variable extends Lambda {\n\n    public _def: Definition;\n\n    constructor(id: number, private _name: string) {\n        super(id);\n    }\n\n    name(): string {\n        return this._name;\n    }\n\n    def(): Definition {\n        return this._def;\n    }\n\n    isVariable(): boolean {\n        return true;\n    }\n\n    isBound(): boolean {\n        return this.def() && this.def().isAbstraction();\n    }\n\n    _accept<T>(visitor: LambdaVisitor<T>): T {\n        return visitor.visit_var(this);\n    }\n}\n\nexport class GlobalDef extends Definition {\n\n    constructor(id: number, private _name: string, public _def: Lambda) {\n        super(id);\n        _def._alias = this;\n    }\n\n    name(): string {\n        return this._name;\n    }\n\n    def(): Lambda {\n        return this._def;\n    }\n\n    _accept<T>(visitor: LambdaVisitor<T>): T {\n        return visitor.visit_gdef(this);\n    }\n\n    isGlobalDef(): boolean {\n        return true;\n    }\n}\n\n\nexport class LambdaFactory {\n    private nextId = 1;\n\n    constructor() {\n    }\n\n    newVariable(name: string): Variable {\n        return new Variable(this.next(), name);\n    }\n\n    newAbstraction(name: string, body: Lambda): Abstraction {\n        return new Abstraction(this.next(), name, body);\n    }\n\n    newApplication(func: Lambda, arg: Lambda): Application {\n        return new Application(this.next(), func, arg);\n    }\n\n    newGlobalDefiniton(name: string, def: Lambda): GlobalDef {\n        return new GlobalDef(this.next(), name, def);\n    }\n\n    next(): number {\n        return this.nextId++;\n    }\n\n    clone(lmb: Lambda): Lambda {\n        return new CloneVisitor(this).do_visit(lmb);\n    }\n\n    reduce(lmb: Lambda, redex: Application): Lambda {\n        if(!redex.isRedex()) {\n            throw \"Is no redex!\";\n        }\n        return new CloneVisitor(this, redex).do_visit(lmb);\n    }\n}\n\nclass CloneVisitor extends LambdaVisitor<Lambda> {\n\n    private usage: { [id: number] : Variable[]; } = {};\n    private replaceVarDef?: Abstraction;\n    private replaceDef?: Lambda;\n    private changed: boolean = false;\n\n    constructor(private factory: LambdaFactory, private redex: Application | undefined = undefined) {\n        super();\n    }\n\n    visit_appl(node: Application): Lambda {\n        if(node == this.redex) {\n            let abst = <Abstraction>(node.func());\n            this.replaceVarDef = abst;\n            this.replaceDef = node.arg();\n            let body = this.do_visit(abst.body());\n            this.replaceDef = undefined;\n            this.replaceVarDef = undefined;\n            this.changed = true;\n            return body;\n        }else{\n            let inCh = this.changed;\n            let func = this.do_visit(node.func());\n            let argCh = this.changed;\n            this.changed = inCh;\n            let arg = this.do_visit(node.arg());\n            this.changed = this.changed || argCh;\n            let newN = this.factory.newApplication(func, arg);\n            if(!this.changed)\n                newN._alias = node._alias;\n            return newN;\n        }\n    }\n\n    visit_abst(node: Abstraction): Lambda {\n        let usages: Variable[] = [];\n        this.usage[node.id()] = usages;\n        let body = this.do_visit(node.body());\n        let newN = this.factory.newAbstraction(node.name(), body);\n        if(usages.length != node._usages.length) {\n            console.log(\"not equal!\");\n        }\n        if(!this.changed)\n            newN._alias = node._alias;\n        \n        if(usages.length > 0) {\n            newN._usages = usages;\n            for(let use of usages) {\n                use._def = newN;\n            }\n        }\n        return newN;\n    }\n\n    visit_var(node: Variable): Lambda {\n        let name = node.name();\n        let newN = this.factory.newVariable(name);\n        if(!this.changed)\n            newN._alias = node._alias;\n        \n        let def = node.def();\n        if(def) {\n            if(def == this.replaceVarDef) {\n                return this.do_visit(this.replaceDef as Lambda);\n            }else{\n                let id = def.id();\n                (this.usage[id] || (this.usage[id] = [])).push(newN);\n            }\n        }\n        return newN;\n    }\n\n    visit_gdef(node: GlobalDef): Lambda {\n        let name = node.name();\n        let def = this.do_visit(node.def());\n        let newN = this.factory.newGlobalDefiniton(name, def);\n        if(!this.changed)\n            newN._alias = node._alias;\n        return newN;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/lambda.ts","\n\nconst defaultRandomStrings = \"abcdefghijklmnopqrstuvwxyz0123456789\";\n\nexport function randomString(length: number = 8, chars: string = defaultRandomStrings): string {\n    var result = \"\";\n    for (var i = length; i > 0; --i) {\n        result += chars[Math.floor(Math.random() * chars.length)];\n    }\n\n    return result;\n}\n\nexport function normFloat(num: number): number {\n    return parseFloat((Math.round(num * 100) / 100).toFixed(2));\n}\n\n\n// WEBPACK FOOTER //\n// ./src/utils.ts","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport { InputPanel } from './inputPanel';\nimport { LambdaFactory } from './lambda';\nimport * as $ from \"jquery\";\n\nimport \"jquery\";\nimport \"bootstrap/dist/js/bootstrap\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./css/style.css\";\n\n\nclass GUI extends React.Component<{}, { text: string }> {\n\n\tprivate input: HTMLInputElement;\n\tprivate factory = new LambdaFactory();\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = { text: \"Test\" };\n\t}\n\n\tprivate settingsChanged() {\n\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<a href=\"https://github.com/srtobi/lambda\">\n\t\t\t\t\t<img\n\t\t\t\t\t\tstyle={{ position: \"absolute\", top: 0, right: 0, border: 0 }}\n\t\t\t\t\t\tsrc=\"https://camo.githubusercontent.com/a6677b08c955af8400f44c6298f40e7d19cc5b2d/68747470733a2f2f73332e616d617a6f6e6177732e636f6d2f6769746875622f726962626f6e732f666f726b6d655f72696768745f677261795f3664366436642e706e67\"\n\t\t\t\t\t\talt=\"Fork me on GitHub\"\n\t\t\t\t\t\tdata-canonical-src=\"https://s3.amazonaws.com/github/ribbons/forkme_right_gray_6d6d6d.png\" />\n\t\t\t\t</a>\n\t\t\t\t<div className=\"container\">\n\t\t\t\t\t<div className=\"page-header\">\n\t\t\t\t\t\t<h1>Lambda <small>by <a href=\"https://github.com/SrTobi/\">SrTobi</a></small></h1>\n\t\t\t\t\t</div>\n\t\t\t\t\t<InputPanel factory={this.factory} />\n\n\t\t\t\t\t<div className=\"panel panel-default config-panel\">\n\t\t\t\t\t\t<div className=\"panel-heading\">\n\t\t\t\t\t\t\t<h3 className=\"panel-title\">\n\t\t\t\t\t\t\t\t<a data-toggle=\"collapse\" data-target=\"#manual-panel\">Manual</a>\n\t\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"panel-body collapse\" id=\"manual-panel\">\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\tThis tool lets you evaluate lambda expressions.\n\t\t\t\t\t\t\t\tJust enter your code into the code box above and click <b>Run</b> or press <i><code>Strg+Enter</code>.</i>\n\t\t\t\t\t\t\t\tYou may also create a new code box: just press <i><code>Shift+Enter</code></i>.\n\t\t\t\t\t\t\t</p>\n\n\t\t\t\t\t\t\t<h4>Lambda</h4>\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\tLambda expressions can be written in the usual way.\n\t\t\t\t\t\t\t</p>\n\n\t\t\t\t\t\t\t<pre>(\\arg.arg var) (\\i.i)</pre>\n\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\tIn the box below the code you can now see how your expression is evaluated.\n\t\t\t\t\t\t\t\tThe underlines will indicate the redix that is currentliy evaluated.\n\t\t\t\t\t\t\t</p>\n\n\t\t\t\t\t\t\t<pre>(\\arg.arg var) (\\i.i)<br />\n\t\t\t\t\t\t\t\t\t=> (\\i.i) var<br />\n\t\t\t\t\t\t\t\t\t=> var</pre>\n\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\tYou may also define aliases for lambda expressions. Just assign them to a name using <code>[alias] = [lambda]</code>.\n\t\t\t\t\t\t\t\tThe alias will then act as if it were the assigned expression.\n\t\t\t\t\t\t\t\tRemember that you <b>can not</b> use the alias in the expression itself!\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t<pre>\n\t\t\t\t\t\t\t\tid = (\\i.i)<br />\n\t\t\t\t\t\t\t\t(\\arg.arg var) id\n\t\t\t\t\t\t\t</pre>\n\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\tIf you have <code>Transform Aliases</code> activated an alias will be transformed to its definition befor it gets evaluated.\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t<pre>\n\t\t\t\t\t\t\t(\\arg.arg var) id<br />\n\t\t\t\t\t\t\t=> id var<br />\n\t\t\t\t\t\t\t&nbsp;= (\\i.i) var<br />\n\t\t\t\t\t\t\t=> var\n\t\t\t\t\t\t\t</pre>\n\n\n\t\t\t\t\t\t\t<h4>Syntactic sugar</h4>\n\t\t\t\t\t\t\t<p style={{color:\"red\"}}><b>Do not</b> use the following syntax in your exam!</p>\n\t\t\t\t\t\t\t<p>To make things easier there are two shortcuts regarding arguments:</p>\n\n\t\t\t\t\t\t\t<pre>\n\t\t\t\t\t\t\t\t// the following lines are equivalent<br />\n\t\t\t\t\t\t\t\tfunc a b = expr<br />\n\t\t\t\t\t\t\t\tfunc = \\a.\\b.expr<br />\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t// the following lines are equivalent<br />\n\t\t\t\t\t\t\t\t\\a b -> expr<br />\n\t\t\t\t\t\t\t\t\\a.\\b.expr<br />\n\t\t\t\t\t\t\t</pre>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nvar target = document.createElement(\"div\");\nReactDOM.render(<GUI />, target);\ndocument.body.appendChild(target);\n\n\n// WEBPACK FOOTER //\n// ./src/index.tsx"],"sourceRoot":""}