{"version":3,"sources":["webpack:///./src/index.tsx","webpack:///./src/inputPanel.tsx","webpack:///./src/block.ts","webpack:///./src/lambda.ts","webpack:///./src/parse.ts","webpack:///./src/grammar.pegjs","webpack:///./src/textPrinter.ts","webpack:///./src/evaluate.ts","webpack:///./src/utils.ts","webpack:///./src/visuals.tsx","webpack:///./src/css/style.css?21aa","webpack:///./src/css/style.css"],"names":[],"mappings":"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AAEX;AACA;AACA,YAAW;;AAEX;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAwD,yBAAyB,EAAE;AACnF,yDAAwD,yBAAyB,EAAE;AACnF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAwD,yBAAyB,EAAE;AACnF,yDAAwD,yBAAyB,EAAE;AACnF;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,kBAAiB,qBAAqB;AACtC;AACA;;AAEA;;AAEA;AACA,2BAA0B,yBAAyB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,wBAAuB;;AAEvB,mCAAkC,wBAAwB;AAC1D;;AAEA;AACA;AACA;AACA;AACA;AACA,mDAAkD,WAAW;AAC7D;AACA,UAAS;AACT,0BAAyB;AACzB,sDAAqD;AACrD;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,qBAAoB;AACpB,UAAS;AACT;AACA,qBAAoB;AACpB,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,+BAA8B,6BAA6B,EAAE;AAC7D,yCAAwC;AACxC,4GAA2G,KAAK;AAChH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kCAAiC,qBAAqB;AACtD;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,eAAc;AACd;;AAEA;AACA,eAAc;AACd;;AAEA;AACA,eAAc;AACd;;AAEA;AACA,eAAc;AACd;;AAEA;AACA,eAAc;AACd;;AAEA;AACA;;AAEA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0CAAyC,QAAQ;;AAEjD;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA,qCAAoC,kBAAkB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,uCAAsC,kBAAkB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA,yCAAwC,kBAAkB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA,2CAA0C,kBAAkB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,uCAAsC,kBAAkB;AACxD;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA,yCAAwC,kBAAkB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA,yCAAwC,mBAAmB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA,2CAA0C,mBAAmB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA,yCAAwC,mBAAmB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe;AACf;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,uCAAsC,mBAAmB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA,+CAA8C,mBAAmB;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB;AACnB;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA,gBAAe;AACf;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA,qCAAoC,mBAAmB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA,2CAA0C,mBAAmB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe;AACf;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA,qCAAoC,mBAAmB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA,2CAA0C,mBAAmB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe;AACf;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,uCAAsC,mBAAmB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA,yCAAwC,mBAAmB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA,2CAA0C,mBAAmB;AAC7D;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,qCAAoC,mBAAmB;AACvD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA,qCAAoC,mBAAmB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA,yCAAwC,mBAAmB;AAC3D;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAoC,mBAAmB;AACvD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA,qCAAoC,mBAAmB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA,yCAAwC,mBAAmB;AAC3D;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,uCAAsC,mBAAmB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA,2CAA0C,mBAAmB;AAC7D;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA,qCAAoC,mBAAmB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,uCAAsC,mBAAmB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA,2CAA0C,mBAAmB;AAC7D;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA,yCAAwC,mBAAmB;AAC3D;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,uCAAsC,mBAAmB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA,yCAAwC,mBAAmB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe;AACf;AACA,6CAA4C,mBAAmB;AAC/D;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA,2CAA0C,mBAAmB;AAC7D;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAoC,mBAAmB;AACvD;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,EAAC,I;;;;;;;;AC1wCD,sCAA+F,GAAU,CAAC;AAc1G,oBAA0B,CAAS,EAAE,IAAI,GAAgB,EA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","file":"main-60e765799ae498c12835.js","sourcesContent":["import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport {Settings, SettingsPanel} from './settings';\nimport {InputPanel} from './inputPanel';\nimport {LambdaFactory} from './lambda';\nimport * as $ from \"jquery\";\n\nimport \"jquery\";\nimport \"bootstrap/dist/js/bootstrap\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./css/style.css\";\n\n\nclass GUI extends React.Component<{}, {text: string}> {\n\n\tprivate input: HTMLInputElement;\n\tprivate factory = new LambdaFactory();\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {text: \"Test\"};\n\t}\n\n\tprivate settingsChanged() {\n\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div className=\"container\">\n\t\t\t\t\t<div className=\"page-header\">\n\t\t\t\t\t\t<h1>Lambda <small></small></h1>\n\t\t\t\t\t</div>\n\t\t\t\t\t<InputPanel factory={this.factory} />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nvar target = document.createElement(\"div\");\nReactDOM.render(<GUI />, target);\ndocument.body.appendChild(target);\n\n\n// WEBPACK FOOTER //\n// ./src/index.tsx","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport {Block} from './block';\nimport {Lambda, LambdaFactory} from './lambda';\nimport {to_string} from './textPrinter';\nimport * as ev from './evaluate';\nimport * as utils from './utils';\nimport * as Visual from './visuals';\nimport * as PegJs from 'pegjs';\n\ndeclare var require:any;\nimport AceEditor from 'react-ace';\n\n\ninterface BlockState {\n    evals?: Lambda[][];\n    error?: string;\n    showAllAppl?: boolean;\n}\n\nclass InputBlock extends React.Component<{factory: LambdaFactory, value?: string, index: number, parent: Block | undefined, onFinish: (idx: number, block: Block) => void}, BlockState> {\n\n    private input: any;\n    private block: Block;\n    private code: string;\n    private id = utils.randomString(12);\n\n    constructor(props: any) {\n        super(props);\n        this.code = this.props.value || \"\";\n        this.block = new Block(this.props.factory, this.props.parent, () => {this.onCompile()})\n        this.state = {evals: [], error: undefined}\n    }\n\n    private onCompile() {\n        let exprs = this.block.expressions();\n        this.setState({\n            evals: exprs.map((expr) => {\n                return ev.reduceAll(expr, ev.normalReduce, this.props.factory);\n            })\n        });\n    }\n\n    private execute(code: string, editor: any) {\n        this.code = code;\n        this.setState({error: undefined});\n        editor.getSession().setAnnotations([]);\n        try {\n            this.block.setCode(code);\n        }catch(e) {\n            let err = e as PegJs.parser.SyntaxError;\n            \n            this.setState({error: err.message + \" in line \" + err.location.start.line + \", column \" + err.location.start.column});\n\n            editor.getSession().setAnnotations([{\n                row: err.location.start.line-1,\n                column: err.location.start.column,\n                text: err.message,\n                type: \"error\" // also warning and information\n            }]);\n        }\n    }\n\n    private onSubmit(editor: any) {\n        this.execute(editor.getValue(), editor);\n        this.props.onFinish(this.props.index, this.block);\n    }\n\n    private onExecute(editor: any) {\n        this.execute(editor.getValue(), editor);\n    }\n\n    render() {\n        let evals = this.state.evals || [];\n        let showAllAppl = this.state.showAllAppl || false;\n        return(\n            <div className=\"input-block\">\n                <div className=\"ace-container\">\n                    <AceEditor\n                        name={this.id}\n                        onKeyUp={(o: any) => this.onSubmit(o)}\n                        ref={(e: any) => this.input = e}\n                        fontSize={15}\n                        className=\"ace-input-area\"\n                        minLines={3}\n                        maxLines={150}\n                        width=\"\"\n                        focus={true}\n                        commands={[{\n                            name: \"submit\",\n                            bindKey: \"shift-enter\",\n                            exec: (editor: any) => this.onSubmit(editor)\n                        },{\n                            name: \"execute\",\n                            bindKey: \"ctrl-enter\",\n                            exec: (editor: any) => this.onExecute(editor)\n                        }]}\n                        value={this.code}\n                        showPrintMargin={false}\n                        editorProps={{\n                            $blockScrolling: true,\n                            enableBasicAutocompletion: true,\n                            enableLiveAutocompletion: true,\n                            tabSize: 2\n                        }}\n                        />\n                </div>\n                <div className=\"config-box\">\n                    <Visual.Switch checked={showAllAppl} onChange={(b:boolean) =>{ this.setState({showAllAppl: b})}} label=\"Show all steps\" />\n                </div>\n                {this.state.error?\n                    <div className=\"error-box\">\n                        Error: {this.state.error}\n                    </div>\n                    :\n                    <div className=\"output-box\">\n                        {evals.map((lmbs) => {\n                            return (\n                                <div className=\"expr-box\">\n                                    {lmbs\n                                        .filter((lmb, idx) => showAllAppl || idx == 0 || idx == lmbs.length - 1)\n                                        .map((lmb, idx) => <div className=\"appl-box\">{idx == 0? \"\" : \"=>\"} {to_string(lmb)}</div>)\n                                    }\n                                    <div className=\"reduce-box\">{lmbs.length - 1} Steps</div>\n                                </div>\n                                );\n                        })}\n                    </div>\n                }\n            </div>\n        );\n    }\n}\n\n\n\nexport class InputPanel extends React.Component<{factory: LambdaFactory}, {blocks: JSX.Element[]}> {\n\n    constructor(props: any) {\n        super(props);\n        this.state = {blocks: []};\n        this.addInputBlock(undefined);\n    }\n\n    addInputBlock(block: Block | undefined) {\n        let idx = this.state.blocks.length;\n        let newB = (<InputBlock factory={this.props.factory} index={idx} parent={block} onFinish={(from, blk) => {\n            if(from + 1 >= this.state.blocks.length) {\n                this.addInputBlock(blk);\n            }\n        }}/>);\n        this.state.blocks.push(newB);\n        if(this.setState) {\n            this.setState({blocks: this.state.blocks});\n        }\n    }\n\n    render() {\n        return(\n            <div className=\"panel panel-default config-panel\">\n                <div className=\"panel-heading\">\n                    <h3 className=\"panel-title\">\n                        <a data-toggle=\"collapse\" data-target=\".panel-body\">Lambda Evaluator</a>\n                    </h3>\n                </div>\n                <div className=\"panel-body collapse in\">\n                    {this.state.blocks}\n                </div>\n            </div>\n        );\n    }\n    \n}\n\n\n// WEBPACK FOOTER //\n// ./src/inputPanel.tsx","import {Lambda, LambdaFactory, Application, Abstraction, Definition, GlobalDef, Variable, LambdaVisitor} from './lambda';\nimport {parse} from './parse';\n\nexport class Block {\n\n    private defs: { [name: string] : GlobalDef; } = {};\n    private exprs: Lambda[] = [];\n    private code: string = \"\";\n    private child: Block;\n\n    constructor(private factory: LambdaFactory, private _parent?: Block, private onRecompile?: (context: Block) => void) {\n        if(_parent) {\n            _parent.child = this;\n        }\n    }\n\n    setCode(code: string): void {\n        this.code = code;\n        this.compile();\n    }\n\n    lookup(name: string): GlobalDef | undefined {\n        let def = this.defs[name];\n        if(def) {\n            return def;\n        }else if(this._parent) {\n            return this._parent.lookup(name);\n        }\n    }\n\n    definitions(): GlobalDef[] {\n        let defs: GlobalDef[] = [];\n        for(let def in this.defs) {\n            defs.push(this.defs[def]);\n        }\n        return defs;\n    }\n\n    expressions(): Lambda[] {\n        return this.exprs;\n    }\n\n    compile() {\n        this.defs = {};\n        this.exprs = [];\n        \n        let entities = parse(this.code, this.factory);\n\n        for(let entity of entities) {\n            let visitor = new ResolveVisitor(this, this.factory);\n            let ast = visitor.do_visit(entity);\n            if(ast.isGlobalDef()) {\n                let def = ast as GlobalDef;\n                this.defs[def.name()] = def;\n            }else{\n                this.exprs.push(ast);\n            }\n        }\n\n        if(this.onRecompile) {\n            this.onRecompile(this);\n        }\n\n        if(this.child) {\n            this.child.compile();\n        }\n    }\n}\n\nclass ResolveVisitor extends LambdaVisitor<Lambda> {\n\n    private defs: { [name: string] : Definition; } = {};\n\n    constructor(private context: Block, private factory: LambdaFactory) {\n        super();\n    }\n\n    visit_appl(node: Application): Lambda {\n        node._func = this.do_visit(node.func());\n        node._arg = this.do_visit(node.arg());\n        return node;\n    }\n\n    visit_abst(node: Abstraction): Lambda {\n        let name = node.name();\n        let old = this.defs[name];\n        this.defs[name] = node;\n        node._body = this.do_visit(node.body());\n        this.defs[name] = old;\n        return node;\n    }\n\n    visit_var(node: Variable): Lambda {\n        let name = node.name();\n        let def = this.defs[name];\n        if(def) {\n            node._def = def;\n            def._usages.push(node);\n        }else{\n            let ref = this.context.lookup(name);\n            if(ref) {\n                return this.factory.clone(ref.def());\n            }\n        }\n        return node;\n    }\n\n    visit_gdef(node: GlobalDef): Lambda {\n        node._def = this.do_visit(node.def());\n        return node;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/block.ts","\nexport abstract class LambdaVisitor <T> {\n    do_visit(node: Lambda): T {\n        return node._accept(this);\n    }\n\n    abstract visit_appl(node: Application): T;\n    abstract visit_abst(node: Abstraction): T;\n    abstract visit_var(node: Variable): T;\n    abstract visit_gdef(node: GlobalDef): T;\n}\n\nexport abstract class Lambda {\n    public _alias?: GlobalDef;\n\n    constructor(private _id: number) {\n    }\n\n    id(): number {\n        return this._id;\n    }\n\n    alias(): GlobalDef | undefined {\n        return this._alias;\n    }\n\n    isApplication(): boolean {\n        return false;\n    }\n\n    isAbstraction(): boolean {\n        return false;\n    }\n\n    isVariable(): boolean {\n        return false;\n    }\n\n    isGlobalDef(): boolean {\n        return false;\n    }\n\n    abstract _accept<T>(visitor: LambdaVisitor<T>): T;\n}\n\nexport class Application extends Lambda {\n    constructor(id: number, public _func: Lambda, public _arg: Lambda) {\n        super(id);\n    }\n\n    func(): Lambda {\n        return this._func;\n    }\n\n    arg(): Lambda {\n        return this._arg;\n    }\n\n    isApplication(): boolean {\n        return true;\n    }\n\n    isRedex(): boolean {\n        return this.func().isAbstraction();\n    }\n\n    _accept<T>(visitor: LambdaVisitor<T>): T {\n        return visitor.visit_appl(this);\n    }\n}\n\nexport abstract class Definition extends Lambda {\n    public _usages: Variable[] = [];\n\n    usages(): Variable[] {\n        return this._usages;\n    }\n\n}\n\nexport class Abstraction extends Definition {\n\n    constructor(id: number, public _name: string, public _body: Lambda) {\n        super(id);\n    }\n\n    name(): string {\n        return this._name;\n    }\n\n    body(): Lambda {\n        return this._body\n    }\n\n    isAbstraction(): boolean {\n        return true;\n    }\n\n    _accept<T>(visitor: LambdaVisitor<T>): T {\n        return visitor.visit_abst(this);\n    }\n}\n\nexport class Variable extends Lambda {\n\n    public _def: Definition;\n\n    constructor(id: number, private _name: string) {\n        super(id);\n    }\n\n    name(): string {\n        return this._name;\n    }\n\n    def(): Definition {\n        return this._def;\n    }\n\n    isVariable(): boolean {\n        return true;\n    }\n\n    isBound(): boolean {\n        return this.def() && this.def().isAbstraction();\n    }\n\n    _accept<T>(visitor: LambdaVisitor<T>): T {\n        return visitor.visit_var(this);\n    }\n}\n\nexport class GlobalDef extends Definition {\n\n    constructor(id: number, private _name: string, public _def: Lambda) {\n        super(id);\n        _def._alias = this;\n    }\n\n    name(): string {\n        return this._name;\n    }\n\n    def(): Lambda {\n        return this._def;\n    }\n\n    _accept<T>(visitor: LambdaVisitor<T>): T {\n        return visitor.visit_gdef(this);\n    }\n\n    isGlobalDef(): boolean {\n        return true;\n    }\n}\n\n\nexport class LambdaFactory {\n    private nextId = 1;\n\n    constructor() {\n    }\n\n    newVariable(name: string): Variable {\n        return new Variable(this.next(), name);\n    }\n\n    newAbstraction(name: string, body: Lambda): Abstraction {\n        return new Abstraction(this.next(), name, body);\n    }\n\n    newApplication(func: Lambda, arg: Lambda): Application {\n        return new Application(this.next(), func, arg);\n    }\n\n    newGlobalDefiniton(name: string, def: Lambda): GlobalDef {\n        return new GlobalDef(this.next(), name, def);\n    }\n\n    next(): number {\n        return this.nextId++;\n    }\n\n    clone(lmb: Lambda): Lambda {\n        return new CloneVisitor(this).do_visit(lmb);\n    }\n\n    reduce(lmb: Lambda, redex: Application): Lambda {\n        if(!redex.isRedex()) {\n            throw \"Is no redex!\";\n        }\n        return new CloneVisitor(this, redex).do_visit(lmb);\n    }\n}\n\nclass CloneVisitor extends LambdaVisitor<Lambda> {\n\n    private usage: { [id: number] : Variable[]; } = {};\n    private replaceVarDef?: Abstraction;\n    private replaceDef?: Lambda;\n    private changed: boolean = false;\n\n    constructor(private factory: LambdaFactory, private redex: Application | undefined = undefined) {\n        super();\n    }\n\n    visit_appl(node: Application): Lambda {\n        if(node == this.redex) {\n            let abst = <Abstraction>(node.func());\n            this.replaceVarDef = abst;\n            this.replaceDef = node.arg();\n            let body = this.do_visit(abst.body());\n            this.replaceDef = undefined;\n            this.replaceVarDef = undefined;\n            this.changed = true;\n            return body;\n        }else{\n            let inCh = this.changed;\n            let func = this.do_visit(node.func());\n            let argCh = this.changed;\n            this.changed = inCh;\n            let arg = this.do_visit(node.arg());\n            this.changed = this.changed || argCh;\n            let newN = this.factory.newApplication(func, arg);\n            if(!this.changed)\n                newN._alias = node._alias;\n            return newN;\n        }\n    }\n\n    visit_abst(node: Abstraction): Lambda {\n        let usages: Variable[] = [];\n        this.usage[node.id()] = usages;\n        let body = this.do_visit(node.body());\n        let newN = this.factory.newAbstraction(node.name(), body);\n        if(usages.length != node._usages.length) {\n            console.log(\"not equal!\");\n        }\n        if(!this.changed)\n            newN._alias = node._alias;\n        \n        if(usages.length > 0) {\n            newN._usages = usages;\n            for(let use of usages) {\n                use._def = newN;\n            }\n        }\n        return newN;\n    }\n\n    visit_var(node: Variable): Lambda {\n        let name = node.name();\n        let newN = this.factory.newVariable(name);\n        if(!this.changed)\n            newN._alias = node._alias;\n        \n        let def = node.def();\n        if(def) {\n            if(def == this.replaceVarDef) {\n                return this.do_visit(this.replaceDef as Lambda);\n            }else{\n                let id = def.id();\n                (this.usage[id] || (this.usage[id] = [])).push(newN);\n            }\n        }\n        return newN;\n    }\n\n    visit_gdef(node: GlobalDef): Lambda {\n        let name = node.name();\n        let def = this.do_visit(node.def());\n        let newN = this.factory.newGlobalDefiniton(name, def);\n        if(!this.changed)\n            newN._alias = node._alias;\n        return newN;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/lambda.ts","import * as L from './lambda';\nimport {LambdaFactory, Lambda} from './lambda';\n//import * as grammar from './grammar'\ndeclare var require: any;\n\ninterface Node {\n    type: string\n}\n\ninterface Block {\n    type: \"block\",\n    entities: Node[]\n}\n\ninterface Definition extends Node {\n    type: \"def\",\n    name: string,\n    params: string[],\n    def: Node\n}\n\ninterface Abstraction extends Node {\n    type: \"abstr\",\n    vars: string[],\n    expr: Node\n}\n\ninterface Application extends Node {\n    type: \"appl\",\n    func: Node,\n    args: Node[]\n}\n\ninterface Var extends Node {\n    type: \"var\",\n    id: string\n}\n\nconst grammar: PEG.Parser = require(\"./grammar.pegjs\");\n\nexport function parse(code: string, factory: LambdaFactory): Lambda[] {\n\n    function makeParameter(body: Lambda, params: string[]): Lambda {\n        for(let param of params.reverse()) {\n            body = factory.newAbstraction(param, body);\n        }\n        return body;\n    }\n\n    function convert(node: Node): Lambda {\n        switch(node.type)\n        {\n        case \"def\":\n            {\n                let n = node as Definition;\n                return factory.newGlobalDefiniton(n.name, makeParameter(convert(n.def), n.params));\n            }\n\n        case \"abstr\":\n            {\n                let n = node as Abstraction;\n                return makeParameter(convert(n.expr), n.vars);\n            }\n\n        case \"appl\":\n            {\n                let n = node as Application;\n                let func = convert(n.func);\n                for(let arg of n.args) {\n                    func = factory.newApplication(func, convert(arg));\n                }\n                return func;\n            }\n\n        case \"var\":\n            {\n                let n = node as Var;\n                return factory.newVariable(n.id);\n            }\n        }\n        throw \"internal error: unknown node type \" + node.type;\n    }\n\n    let root: Block = grammar.parse(code);\n\n\n    return root.entities.map(convert);\n}\n\n\n// WEBPACK FOOTER //\n// ./src/parse.ts","module.exports = /*\n * Generated by PEG.js 0.10.0.\n *\n * http://pegjs.org/\n */\n(function() {\n  \"use strict\";\n\n  function peg$subclass(child, parent) {\n    function ctor() { this.constructor = child; }\n    ctor.prototype = parent.prototype;\n    child.prototype = new ctor();\n  }\n\n  function peg$SyntaxError(message, expected, found, location) {\n    this.message  = message;\n    this.expected = expected;\n    this.found    = found;\n    this.location = location;\n    this.name     = \"SyntaxError\";\n\n    if (typeof Error.captureStackTrace === \"function\") {\n      Error.captureStackTrace(this, peg$SyntaxError);\n    }\n  }\n\n  peg$subclass(peg$SyntaxError, Error);\n\n  peg$SyntaxError.buildMessage = function(expected, found) {\n    var DESCRIBE_EXPECTATION_FNS = {\n          literal: function(expectation) {\n            return \"\\\"\" + literalEscape(expectation.text) + \"\\\"\";\n          },\n\n          \"class\": function(expectation) {\n            var escapedParts = \"\",\n                i;\n\n            for (i = 0; i < expectation.parts.length; i++) {\n              escapedParts += expectation.parts[i] instanceof Array\n                ? classEscape(expectation.parts[i][0]) + \"-\" + classEscape(expectation.parts[i][1])\n                : classEscape(expectation.parts[i]);\n            }\n\n            return \"[\" + (expectation.inverted ? \"^\" : \"\") + escapedParts + \"]\";\n          },\n\n          any: function(expectation) {\n            return \"any character\";\n          },\n\n          end: function(expectation) {\n            return \"end of input\";\n          },\n\n          other: function(expectation) {\n            return expectation.description;\n          }\n        };\n\n    function hex(ch) {\n      return ch.charCodeAt(0).toString(16).toUpperCase();\n    }\n\n    function literalEscape(s) {\n      return s\n        .replace(/\\\\/g, '\\\\\\\\')\n        .replace(/\"/g,  '\\\\\"')\n        .replace(/\\0/g, '\\\\0')\n        .replace(/\\t/g, '\\\\t')\n        .replace(/\\n/g, '\\\\n')\n        .replace(/\\r/g, '\\\\r')\n        .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n        .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\n    }\n\n    function classEscape(s) {\n      return s\n        .replace(/\\\\/g, '\\\\\\\\')\n        .replace(/\\]/g, '\\\\]')\n        .replace(/\\^/g, '\\\\^')\n        .replace(/-/g,  '\\\\-')\n        .replace(/\\0/g, '\\\\0')\n        .replace(/\\t/g, '\\\\t')\n        .replace(/\\n/g, '\\\\n')\n        .replace(/\\r/g, '\\\\r')\n        .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n        .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\n    }\n\n    function describeExpectation(expectation) {\n      return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);\n    }\n\n    function describeExpected(expected) {\n      var descriptions = new Array(expected.length),\n          i, j;\n\n      for (i = 0; i < expected.length; i++) {\n        descriptions[i] = describeExpectation(expected[i]);\n      }\n\n      descriptions.sort();\n\n      if (descriptions.length > 0) {\n        for (i = 1, j = 1; i < descriptions.length; i++) {\n          if (descriptions[i - 1] !== descriptions[i]) {\n            descriptions[j] = descriptions[i];\n            j++;\n          }\n        }\n        descriptions.length = j;\n      }\n\n      switch (descriptions.length) {\n        case 1:\n          return descriptions[0];\n\n        case 2:\n          return descriptions[0] + \" or \" + descriptions[1];\n\n        default:\n          return descriptions.slice(0, -1).join(\", \")\n            + \", or \"\n            + descriptions[descriptions.length - 1];\n      }\n    }\n\n    function describeFound(found) {\n      return found ? \"\\\"\" + literalEscape(found) + \"\\\"\" : \"end of input\";\n    }\n\n    return \"Expected \" + describeExpected(expected) + \" but \" + describeFound(found) + \" found.\";\n  };\n\n  function peg$parse(input, options) {\n    options = options !== void 0 ? options : {};\n\n    var peg$FAILED = {},\n\n        peg$startRuleFunctions = { Block: peg$parseBlock },\n        peg$startRuleFunction  = peg$parseBlock,\n\n        peg$c0 = /^[\\n\\r \\t]/,\n        peg$c1 = peg$classExpectation([\"\\n\", \"\\r\", \" \", \"\\t\"], false, false),\n        peg$c2 = function(entities) {\n            return {\n                type: \"block\",\n                entities: entities.filter((e) => { return e;})\n            };\n        },\n        peg$c3 = /^[\\n\\r;]/,\n        peg$c4 = peg$classExpectation([\"\\n\", \"\\r\", \";\"], false, false),\n        peg$c5 = function(entity) {\n            return entity;\n        },\n        peg$c6 = \"--\",\n        peg$c7 = peg$literalExpectation(\"--\", false),\n        peg$c8 = \"//\",\n        peg$c9 = peg$literalExpectation(\"//\", false),\n        peg$c10 = /^[^\\n\\r]/,\n        peg$c11 = peg$classExpectation([\"\\n\", \"\\r\"], true, false),\n        peg$c12 = function() {\n            return undefined;\n        },\n        peg$c13 = \"=\",\n        peg$c14 = peg$literalExpectation(\"=\", false),\n        peg$c15 = function(name, params, def) {\n            return {\n                type: \"def\",\n                name: name,\n                params: params,\n                def: def\n            };\n        },\n        peg$c16 = \"(\",\n        peg$c17 = peg$literalExpectation(\"(\", false),\n        peg$c18 = \")\",\n        peg$c19 = peg$literalExpectation(\")\", false),\n        peg$c20 = function(exp) {\n            return exp;\n        },\n        peg$c21 = \"\\\\\",\n        peg$c22 = peg$literalExpectation(\"\\\\\", false),\n        peg$c23 = \".\",\n        peg$c24 = peg$literalExpectation(\".\", false),\n        peg$c25 = function(varId, expr) {\n            return {\n                type: \"abstr\",\n                vars: [varId],\n                expr: expr\n            };\n        },\n        peg$c26 = \"->\",\n        peg$c27 = peg$literalExpectation(\"->\", false),\n        peg$c28 = function(vars, expr) {\n            return {\n                type: \"abstr\",\n                vars: vars,\n                expr: expr\n            };\n        },\n        peg$c29 = function(func, args) {\n            return {\n                type: \"appl\",\n                func: func,\n                args: args\n            };\n        },\n        peg$c30 = function(op, operant) {\n            return {\n                op: op,\n                operant: operant\n            };\n        },\n        peg$c31 = function(first, operants) {\n            return {\n                type: \"operation\",\n                first: first,\n                operants: operants\n            };\n        },\n        peg$c32 = function(id) {\n            return { type: \"var\", id: id};\n        },\n        peg$c33 = function(num) {\n            return {type: \"number\", number: num};\n        },\n        peg$c34 = peg$otherExpectation(\"variable\"),\n        peg$c35 = /^[_a-zA-Z]/,\n        peg$c36 = peg$classExpectation([\"_\", [\"a\", \"z\"], [\"A\", \"Z\"]], false, false),\n        peg$c37 = /^[_a-zA-Z0-9]/,\n        peg$c38 = peg$classExpectation([\"_\", [\"a\", \"z\"], [\"A\", \"Z\"], [\"0\", \"9\"]], false, false),\n        peg$c39 = function(id) {\n          return id;\n        },\n        peg$c40 = peg$otherExpectation(\"integer\"),\n        peg$c41 = /^[0-9]/,\n        peg$c42 = peg$classExpectation([[\"0\", \"9\"]], false, false),\n        peg$c43 = function() { return parseInt(text(), 10); },\n        peg$c44 = /^[\\-+%\\/<>=[\\]\\^!=&{}*?#$|~]/,\n        peg$c45 = peg$classExpectation([\"-\", \"+\", \"%\", \"/\", \"<\", \">\", \"=\", \"[\", \"]\", \"^\", \"!\", \"=\", \"&\", \"{\", \"}\", \"*\", \"?\", \"#\", \"$\", \"|\", \"~\"], false, false),\n        peg$c46 = \"`\",\n        peg$c47 = peg$literalExpectation(\"`\", false),\n        peg$c48 = peg$otherExpectation(\"whitespace\"),\n        peg$c49 = /^[ \\t]/,\n        peg$c50 = peg$classExpectation([\" \", \"\\t\"], false, false),\n        peg$c51 = /^[\\n\\r]/,\n        peg$c52 = peg$classExpectation([\"\\n\", \"\\r\"], false, false),\n\n        peg$currPos          = 0,\n        peg$savedPos         = 0,\n        peg$posDetailsCache  = [{ line: 1, column: 1 }],\n        peg$maxFailPos       = 0,\n        peg$maxFailExpected  = [],\n        peg$silentFails      = 0,\n\n        peg$result;\n\n    if (\"startRule\" in options) {\n      if (!(options.startRule in peg$startRuleFunctions)) {\n        throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n      }\n\n      peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n    }\n\n    function text() {\n      return input.substring(peg$savedPos, peg$currPos);\n    }\n\n    function location() {\n      return peg$computeLocation(peg$savedPos, peg$currPos);\n    }\n\n    function expected(description, location) {\n      location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\n\n      throw peg$buildStructuredError(\n        [peg$otherExpectation(description)],\n        input.substring(peg$savedPos, peg$currPos),\n        location\n      );\n    }\n\n    function error(message, location) {\n      location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\n\n      throw peg$buildSimpleError(message, location);\n    }\n\n    function peg$literalExpectation(text, ignoreCase) {\n      return { type: \"literal\", text: text, ignoreCase: ignoreCase };\n    }\n\n    function peg$classExpectation(parts, inverted, ignoreCase) {\n      return { type: \"class\", parts: parts, inverted: inverted, ignoreCase: ignoreCase };\n    }\n\n    function peg$anyExpectation() {\n      return { type: \"any\" };\n    }\n\n    function peg$endExpectation() {\n      return { type: \"end\" };\n    }\n\n    function peg$otherExpectation(description) {\n      return { type: \"other\", description: description };\n    }\n\n    function peg$computePosDetails(pos) {\n      var details = peg$posDetailsCache[pos], p;\n\n      if (details) {\n        return details;\n      } else {\n        p = pos - 1;\n        while (!peg$posDetailsCache[p]) {\n          p--;\n        }\n\n        details = peg$posDetailsCache[p];\n        details = {\n          line:   details.line,\n          column: details.column\n        };\n\n        while (p < pos) {\n          if (input.charCodeAt(p) === 10) {\n            details.line++;\n            details.column = 1;\n          } else {\n            details.column++;\n          }\n\n          p++;\n        }\n\n        peg$posDetailsCache[pos] = details;\n        return details;\n      }\n    }\n\n    function peg$computeLocation(startPos, endPos) {\n      var startPosDetails = peg$computePosDetails(startPos),\n          endPosDetails   = peg$computePosDetails(endPos);\n\n      return {\n        start: {\n          offset: startPos,\n          line:   startPosDetails.line,\n          column: startPosDetails.column\n        },\n        end: {\n          offset: endPos,\n          line:   endPosDetails.line,\n          column: endPosDetails.column\n        }\n      };\n    }\n\n    function peg$fail(expected) {\n      if (peg$currPos < peg$maxFailPos) { return; }\n\n      if (peg$currPos > peg$maxFailPos) {\n        peg$maxFailPos = peg$currPos;\n        peg$maxFailExpected = [];\n      }\n\n      peg$maxFailExpected.push(expected);\n    }\n\n    function peg$buildSimpleError(message, location) {\n      return new peg$SyntaxError(message, null, null, location);\n    }\n\n    function peg$buildStructuredError(expected, found, location) {\n      return new peg$SyntaxError(\n        peg$SyntaxError.buildMessage(expected, found),\n        expected,\n        found,\n        location\n      );\n    }\n\n    function peg$parseBlock() {\n      var s0, s1, s2, s3;\n\n      s0 = peg$currPos;\n      s1 = [];\n      if (peg$c0.test(input.charAt(peg$currPos))) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c1); }\n      }\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        if (peg$c0.test(input.charAt(peg$currPos))) {\n          s2 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c1); }\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$parseEntity();\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parseEntity();\n        }\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c2(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseEntity() {\n      var s0, s1, s2, s3, s4;\n\n      s0 = peg$currPos;\n      s1 = peg$parseDef();\n      if (s1 === peg$FAILED) {\n        s1 = peg$parseExpr();\n        if (s1 === peg$FAILED) {\n          s1 = peg$parseComment();\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          s3 = [];\n          if (peg$c3.test(input.charAt(peg$currPos))) {\n            s4 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c4); }\n          }\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            if (peg$c3.test(input.charAt(peg$currPos))) {\n              s4 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c4); }\n            }\n          }\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c5(s1);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseComment() {\n      var s0, s1, s2, s3, s4;\n\n      s0 = peg$currPos;\n      s1 = peg$parse_();\n      if (s1 !== peg$FAILED) {\n        if (input.substr(peg$currPos, 2) === peg$c6) {\n          s2 = peg$c6;\n          peg$currPos += 2;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c7); }\n        }\n        if (s2 === peg$FAILED) {\n          if (input.substr(peg$currPos, 2) === peg$c8) {\n            s2 = peg$c8;\n            peg$currPos += 2;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c9); }\n          }\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = [];\n          if (peg$c10.test(input.charAt(peg$currPos))) {\n            s4 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c11); }\n          }\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            if (peg$c10.test(input.charAt(peg$currPos))) {\n              s4 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c11); }\n            }\n          }\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c12();\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseDef() {\n      var s0, s1, s2, s3, s4, s5;\n\n      s0 = peg$currPos;\n      s1 = peg$parseIdentifier();\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$parseIdentifier();\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parseIdentifier();\n        }\n        if (s2 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 61) {\n            s3 = peg$c13;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c14); }\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parse_();\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parseExpr();\n              if (s5 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c15(s1, s2, s5);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseAtom() {\n      var s0;\n\n      s0 = peg$parseVar();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseExprP();\n      }\n\n      return s0;\n    }\n\n    function peg$parseExpr() {\n      var s0;\n\n      s0 = peg$parseAbstraction();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseApplication();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parseAtom();\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parseExprP() {\n      var s0, s1, s2, s3, s4, s5, s6, s7;\n\n      s0 = peg$currPos;\n      s1 = peg$parse_();\n      if (s1 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 40) {\n          s2 = peg$c16;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c17); }\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parse_();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parseExpr();\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parse_();\n              if (s5 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 41) {\n                  s6 = peg$c18;\n                  peg$currPos++;\n                } else {\n                  s6 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c19); }\n                }\n                if (s6 !== peg$FAILED) {\n                  s7 = peg$parse_();\n                  if (s7 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c20(s4);\n                    s0 = s1;\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseAbstraction() {\n      var s0;\n\n      s0 = peg$parseAbstraction1();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseAbstraction2();\n      }\n\n      return s0;\n    }\n\n    function peg$parseAbstraction1() {\n      var s0, s1, s2, s3, s4, s5;\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 92) {\n        s1 = peg$c21;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c22); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseIdentifier();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parse_();\n          if (s3 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 46) {\n              s4 = peg$c23;\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c24); }\n            }\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parseExpr();\n              if (s5 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c25(s2, s5);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseAbstraction2() {\n      var s0, s1, s2, s3, s4, s5;\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 92) {\n        s1 = peg$c21;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c22); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$parseIdentifier();\n        if (s3 !== peg$FAILED) {\n          while (s3 !== peg$FAILED) {\n            s2.push(s3);\n            s3 = peg$parseIdentifier();\n          }\n        } else {\n          s2 = peg$FAILED;\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parse_();\n          if (s3 !== peg$FAILED) {\n            if (input.substr(peg$currPos, 2) === peg$c26) {\n              s4 = peg$c26;\n              peg$currPos += 2;\n            } else {\n              s4 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c27); }\n            }\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parseExpr();\n              if (s5 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c28(s2, s5);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseApplication() {\n      var s0, s1, s2, s3;\n\n      s0 = peg$currPos;\n      s1 = peg$parseFunc();\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$parseAtom();\n        if (s3 !== peg$FAILED) {\n          while (s3 !== peg$FAILED) {\n            s2.push(s3);\n            s3 = peg$parseAtom();\n          }\n        } else {\n          s2 = peg$FAILED;\n        }\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c29(s1, s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseFunc() {\n      var s0;\n\n      s0 = peg$parseAbstraction();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseAtom();\n      }\n\n      return s0;\n    }\n\n    function peg$parseOperant() {\n      var s0, s1, s2;\n\n      s0 = peg$currPos;\n      s1 = peg$parseOperator();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseAtom();\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c30(s1, s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseOperation() {\n      var s0, s1, s2, s3, s4;\n\n      s0 = peg$currPos;\n      s1 = peg$parseAtom();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          s3 = [];\n          s4 = peg$parseOperant();\n          if (s4 !== peg$FAILED) {\n            while (s4 !== peg$FAILED) {\n              s3.push(s4);\n              s4 = peg$parseOperant();\n            }\n          } else {\n            s3 = peg$FAILED;\n          }\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c31(s1, s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseVar() {\n      var s0, s1;\n\n      s0 = peg$currPos;\n      s1 = peg$parseIdentifier();\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c32(s1);\n      }\n      s0 = s1;\n\n      return s0;\n    }\n\n    function peg$parseNumber() {\n      var s0, s1, s2, s3;\n\n      s0 = peg$currPos;\n      s1 = peg$parse_();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseInteger();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parse_();\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c33(s2);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseIdentifier() {\n      var s0, s1, s2, s3, s4, s5, s6;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = peg$parse_();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$currPos;\n        s3 = peg$currPos;\n        if (peg$c35.test(input.charAt(peg$currPos))) {\n          s4 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c36); }\n        }\n        if (s4 !== peg$FAILED) {\n          s5 = [];\n          if (peg$c37.test(input.charAt(peg$currPos))) {\n            s6 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s6 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c38); }\n          }\n          while (s6 !== peg$FAILED) {\n            s5.push(s6);\n            if (peg$c37.test(input.charAt(peg$currPos))) {\n              s6 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s6 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c38); }\n            }\n          }\n          if (s5 !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n          s2 = input.substring(s2, peg$currPos);\n        } else {\n          s2 = s3;\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parse_();\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c39(s2);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c34); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseInteger() {\n      var s0, s1, s2;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = [];\n      if (peg$c41.test(input.charAt(peg$currPos))) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c42); }\n      }\n      if (s2 !== peg$FAILED) {\n        while (s2 !== peg$FAILED) {\n          s1.push(s2);\n          if (peg$c41.test(input.charAt(peg$currPos))) {\n            s2 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c42); }\n          }\n        }\n      } else {\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c43();\n      }\n      s0 = s1;\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c40); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseOperator() {\n      var s0, s1, s2, s3, s4;\n\n      s0 = peg$currPos;\n      s1 = [];\n      if (peg$c44.test(input.charAt(peg$currPos))) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c45); }\n      }\n      if (s2 !== peg$FAILED) {\n        while (s2 !== peg$FAILED) {\n          s1.push(s2);\n          if (peg$c44.test(input.charAt(peg$currPos))) {\n            s2 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c45); }\n          }\n        }\n      } else {\n        s1 = peg$FAILED;\n      }\n      if (s1 === peg$FAILED) {\n        s1 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 96) {\n          s2 = peg$c46;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c47); }\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseIdentifier();\n          if (s3 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 96) {\n              s4 = peg$c46;\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c47); }\n            }\n            if (s4 !== peg$FAILED) {\n              s2 = [s2, s3, s4];\n              s1 = s2;\n            } else {\n              peg$currPos = s1;\n              s1 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s1;\n            s1 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s1;\n          s1 = peg$FAILED;\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        s0 = input.substring(s0, peg$currPos);\n      } else {\n        s0 = s1;\n      }\n\n      return s0;\n    }\n\n    function peg$parse_() {\n      var s0, s1, s2, s3;\n\n      peg$silentFails++;\n      s0 = [];\n      if (peg$c49.test(input.charAt(peg$currPos))) {\n        s1 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c50); }\n      }\n      if (s1 === peg$FAILED) {\n        s1 = peg$currPos;\n        s2 = [];\n        if (peg$c51.test(input.charAt(peg$currPos))) {\n          s3 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c52); }\n        }\n        if (s3 !== peg$FAILED) {\n          while (s3 !== peg$FAILED) {\n            s2.push(s3);\n            if (peg$c51.test(input.charAt(peg$currPos))) {\n              s3 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s3 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c52); }\n            }\n          }\n        } else {\n          s2 = peg$FAILED;\n        }\n        if (s2 !== peg$FAILED) {\n          if (peg$c49.test(input.charAt(peg$currPos))) {\n            s3 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c50); }\n          }\n          if (s3 !== peg$FAILED) {\n            s2 = [s2, s3];\n            s1 = s2;\n          } else {\n            peg$currPos = s1;\n            s1 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s1;\n          s1 = peg$FAILED;\n        }\n      }\n      while (s1 !== peg$FAILED) {\n        s0.push(s1);\n        if (peg$c49.test(input.charAt(peg$currPos))) {\n          s1 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c50); }\n        }\n        if (s1 === peg$FAILED) {\n          s1 = peg$currPos;\n          s2 = [];\n          if (peg$c51.test(input.charAt(peg$currPos))) {\n            s3 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c52); }\n          }\n          if (s3 !== peg$FAILED) {\n            while (s3 !== peg$FAILED) {\n              s2.push(s3);\n              if (peg$c51.test(input.charAt(peg$currPos))) {\n                s3 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s3 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c52); }\n              }\n            }\n          } else {\n            s2 = peg$FAILED;\n          }\n          if (s2 !== peg$FAILED) {\n            if (peg$c49.test(input.charAt(peg$currPos))) {\n              s3 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s3 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c50); }\n            }\n            if (s3 !== peg$FAILED) {\n              s2 = [s2, s3];\n              s1 = s2;\n            } else {\n              peg$currPos = s1;\n              s1 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s1;\n            s1 = peg$FAILED;\n          }\n        }\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c48); }\n      }\n\n      return s0;\n    }\n\n    peg$result = peg$startRuleFunction();\n\n    if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n      return peg$result;\n    } else {\n      if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n        peg$fail(peg$endExpectation());\n      }\n\n      throw peg$buildStructuredError(\n        peg$maxFailExpected,\n        peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null,\n        peg$maxFailPos < input.length\n          ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)\n          : peg$computeLocation(peg$maxFailPos, peg$maxFailPos)\n      );\n    }\n  }\n\n  return {\n    SyntaxError: peg$SyntaxError,\n    parse:       peg$parse\n  };\n})();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/grammar.pegjs\n// module id = 182\n// module chunks = 0","import {Lambda, LambdaVisitor, Application, Abstraction, Definition, Variable, GlobalDef} from \"./lambda\";\n\nexport interface PrintOptions {\n    print_id?: boolean,\n    print_def?: boolean,\n    print_paren?: boolean,\n    expand_alias?: boolean\n}\n\ninterface AppedixInfo {\n    paren?: boolean\n    def?: Definition\n}\n\nexport function to_string(l: Lambda, opts:PrintOptions = {}): string {\n    if(opts.print_id) {\n        opts.print_paren = true;\n    }\n    return tos(l, false, false);\n\n    function tos(lmb: Lambda, inAppl: boolean, firstInAppl: boolean): string {\n\n        class ToStringVisitor extends LambdaVisitor<string> {\n            visit_appl(node: Application): string {\n                let f = tos(node.func(), true, true);\n                let a = tos(node.arg(), true, false);\n                return this.p(`${f} ${a}`, {paren: inAppl && !firstInAppl });\n            }\n\n            visit_abst(node: Abstraction): string {\n                let name = node.name();\n                let body = tos(node.body(), false, false);\n                return this.p(`\\\\${name}.${body}`, {paren: inAppl });\n            }\n\n            visit_var(node: Variable): string {\n                return this.p( node.name(), {def: node.def()});\n            }\n\n            visit_gdef(node: GlobalDef): string {\n                let name = node.name();\n                let def = tos(node.def(), false, false);\n                return this.p(`${name} = ${def}`);\n            }\n\n            private appedix(info: AppedixInfo): string {\n                let result: string[] = [];\n                if(opts.print_id) {\n                    result.push(`id=${lmb.id()}`);\n                }\n                if(opts.print_def && info.def) {\n                    result.push(`def=${info.def.id()}`);\n                }\n                return result.length? `[${result.join(\",\")}]` : \"\";\n            }\n\n\n            private p(str: string, info: AppedixInfo = {}) {\n                return (opts.print_paren || info.paren? `(${str})` : str) + this.appedix(info);\n            }\n        }\n        let alias = lmb.alias();\n        if(alias && l != alias && !opts.expand_alias) {\n            return alias.name();\n        }\n        let v = new ToStringVisitor();\n        return v.do_visit(lmb);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/textPrinter.ts","import {Lambda, Application, Definition, Variable, Abstraction, GlobalDef, LambdaVisitor, LambdaFactory} from './lambda';\nimport {to_string} from './textPrinter';\n\n\nexport type ReduceStrategy = (lmb: Lambda) => Application | undefined;\n\nexport function normalReduce(lmb: Lambda): Application | undefined {\n    return new NormalReduceVisitor().do_visit(lmb);\n}\n\nexport function reduce(lmb: Lambda, strategy: ReduceStrategy, factory: LambdaFactory): Lambda | undefined {\n    let redex = strategy(lmb);\n    return redex? factory.reduce(lmb, redex) : undefined;\n}\n\nexport function reduceAll(lmb: Lambda, strategy: ReduceStrategy, factory: LambdaFactory): Lambda[] {\n    let steps: Lambda[] = [lmb];\n    let step: Lambda | undefined;\n    while(step = reduce(lmb, strategy, factory)) {\n        steps.push(step);\n        lmb = step;\n    }\n\n    return steps;\n}\n\nclass NormalReduceVisitor extends LambdaVisitor<Application | undefined> {\n\n    visit_appl(node: Application): Application | undefined {\n        if(node.isRedex()) {\n            return node;\n        }\n        let redex = this.do_visit(node.func());\n        return redex || this.do_visit(node.arg());\n    }\n\n    visit_abst(node: Abstraction): Application | undefined {\n        return this.do_visit(node.body());\n    }\n\n    visit_var(node: Variable): Application | undefined {\n        return undefined;\n    }\n\n    visit_gdef(node: GlobalDef): Application | undefined {\n        return this.do_visit(node.def());\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/evaluate.ts","\n\nconst defaultRandomStrings = \"abcdefghijklmnopqrstuvwxyz0123456789\";\n\nexport function randomString(length: number = 8, chars: string = defaultRandomStrings): string {\n    var result = \"\";\n    for (var i = length; i > 0; --i) {\n        result += chars[Math.floor(Math.random() * chars.length)];\n    }\n\n    return result;\n}\n\nexport function normFloat(num: number): number {\n    return parseFloat((Math.round(num * 100) / 100).toFixed(2));\n}\n\n\n// WEBPACK FOOTER //\n// ./src/utils.ts","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport * as Utils from \"./utils\";\n\n\n/** small wrapper for bootstrap form groups */\nexport class FormGroup extends React.Component<{\n\t\tlabel: string, children?: any, id?:string, isStatic?:boolean\n\t}, {}> {\n\n\trender() {\n\t\treturn (\n            <div className=\"form-group\">\n                <label htmlFor={this.props.id} className=\"col-sm-6 control-label\">{this.props.label}</label>\n                <div className={\"col-sm-6 \"+(this.props.isStatic?\"form-control-static\":\"\")}>{this.props.children}</div>\n            </div>\n        );\n\t}\n}\n\n\n/** small wrapper for bootstrap form checkboxes */\nexport class CheckboxForm extends React.Component<{checked: boolean, label: string, id?: string, onChange: (checked: boolean) => void}, {}> {\n\n\tprivate input: HTMLInputElement;\n\tprivate id = this.props.id || Utils.randomString();\n\n\tprivate onChange(): void {\n\t\tthis.props.onChange(this.input.checked);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<FormGroup label={this.props.label} id={this.props.id} isStatic>\n\t\t\t\t<input type=\"checkbox\" checked={this.props.checked} id={this.id} ref={e => this.input = e} onChange={this.onChange.bind(this)} />\n\t\t\t</FormGroup>\n\t\t);\n\t}\n}\n\n/** small wrapper for bootstrap form number field */\nexport class NumberForm extends React.Component<{value: number, step?: number, min?: number, max?: number, label: string, id?: string, onChange: (value: number) => void}, {}> {\n\n\tprivate input: HTMLInputElement;\n\tprivate id = this.props.id || Utils.randomString();\n\n\tprivate onChange(): void {\n\t\tthis.props.onChange(+this.input.value);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<FormGroup label={this.props.label} id={this.props.id} isStatic>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"number\"\n\t\t\t\t\tvalue={this.props.value}\n\t\t\t\t\tid={this.id}\n\t\t\t\t\tstep={this.props.step}\n\t\t\t\t\tmin={this.props.min}\n\t\t\t\t\tmax={this.props.max}\n\t\t\t\t\tref={e => this.input = e}\n\t\t\t\t\tonChange={this.onChange.bind(this)} />\n\t\t\t</FormGroup>\n\t\t);\n\t}\n}\n\n\nexport class Switch extends React.Component<{checked: boolean, label: string, id?: string, onChange: (checked: boolean) => void}, {}> {\n\n\tprivate input: HTMLInputElement;\n\tprivate id = this.props.id || Utils.randomString();\n\n\tprivate onChange(): void {\n\t\tthis.props.onChange(this.input.checked);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"switch-grouper\">\n                <label htmlFor={this.id}>{this.props.label}</label>\n\t\t\t\t<label className=\"switch\">\n\t\t\t\t\t<input type=\"checkbox\" checked={this.props.checked} id={this.id} ref={e => this.input = e} onChange={this.onChange.bind(this)} />\n\t\t\t\t\t<div className=\"slider\"></div>\n\t\t\t\t</label>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n\n// WEBPACK FOOTER //\n// ./src/visuals.tsx","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!./../../node_modules/css-loader/index.js!./style.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!./../../node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!./../../node_modules/css-loader/index.js!./style.css\", function() {\n\t\t\tvar newContent = require(\"!!./../../node_modules/css-loader/index.js!./style.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/css/style.css\n// module id = 204\n// module chunks = 0","exports = module.exports = require(\"./../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"body {\\n    background-color: whitesmoke;\\n    padding-bottom: 500px;\\n}\\n\\n.inputArea {\\n    width: auto;\\n    background-color: whitesmoke;\\n    border: solid 1px darkgray;\\n    padding: 2px;\\n}\\n\\n.transition-prob-control input {\\n    margin: 4px;\\n    width: 80px;\\n    text-align: center;\\n}\\n\\n.input-block {\\n    font: 15px/normal 'Monaco', 'Menlo', 'Ubuntu Mono', 'Consolas', 'source-code-pro', monospace;\\n    margin-bottom: 30px;\\n}\\n\\n.input-block:last-child {\\n    margin-bottom: 0px;\\n}\\n\\n.ace-container {\\n    border: solid 1px lightgray;\\n}\\n\\n.error-box {\\n    color: darkred;\\n    border: solid 1px lightgray;\\n    padding: 3px;\\n}\\n\\n.config-box {\\n    color: dimgrey;\\n    border: solid 1px lightgray;\\n    padding: 5px;\\n    vertical-align: center;\\n    background-color: #f0f0f0;\\n}\\n\\n.config-box label {\\n    margin: 0 4px;\\n}\\n\\n.expr-box {\\n    color: black;\\n    border: solid 1px lightgray;\\n    padding: 3px;\\n    padding-left: 10px;\\n    overflow: auto;\\n    word-wrap: normal;\\n    white-space:nowrap;\\n}\\n\\n.appl-box {\\n    padding: 1px;\\n}\\n\\n.reduce-box {\\n    text-align: right;\\n    background: #d0ffd0;\\n    float: right;\\n}\\n\\n\\n\\n\\n\\n\\n\\n\\n.switch-grouper {\\n    vertical-align: middle;\\n}\\n\\n.switch {\\n  position: relative;\\n  display: inline-block;\\n  width: 30px;\\n  height: 17px;\\n  margin: 0 4px;\\n  vertical-align: middle;\\n}\\n\\n/* Hide default HTML checkbox */\\n.switch input {display:none;}\\n\\n/* The slider */\\n.slider {\\n  position: absolute;\\n  cursor: pointer;\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  bottom: 0;\\n  background-color: #ccc;\\n  -webkit-transition: .4s;\\n  transition: .4s;\\n}\\n\\n.slider:before {\\n  position: absolute;\\n  content: \\\"\\\";\\n  height: 13px;\\n  width: 13px;\\n  left: 2px;\\n  bottom: 2px;\\n  background-color: white;\\n  -webkit-transition: .4s;\\n  transition: .4s;\\n}\\n\\ninput:checked + .slider {\\n  background-color: #2196F3;\\n}\\n\\ninput:focus + .slider {\\n  box-shadow: 0 0 1px #2196F3;\\n}\\n\\ninput:checked + .slider:before {\\n  -webkit-transform: translateX(13px);\\n  -ms-transform: translateX(13px);\\n  transform: translateX(13px);\\n}\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader!./src/css/style.css\n// module id = 205\n// module chunks = 0"],"sourceRoot":""}